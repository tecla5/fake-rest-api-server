swagger: '2.0'
info:
  version: 1.10.0
  title: YEAY Rest API
host: '127.0.0.1:8080'
basePath: /v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    description: |
      Value has to contain string of this format `Bearer <accessToken>`
    type: apiKey
    name: Authorization
    in: header
  None:
    description: |
      No auth needed
    type: basic
tags:
  - name: Auth
  - name: Product & Video
  - name: Featured videos & sellers
  - name: Catalog
  - name: Users
  - name: Misc
  - name: Deprecated
    description: âš  Endpoints that should no longer be used.
paths:
  /affiliate-products:
    x-swagger-router-controller: affiliateProductsController
    get:
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: getAffiliateProductsList
      tags:
        - Affiliate Products
      summary: Retrieves a list of affiliate products
      description: >
        Returns a paginated list of affiliate products. Allows for filtering
        based on search term or list of ids.
      parameters:
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
        - name: ids
          in: query
          description: Comma separated list of ids
          type: array
          items:
            type: string
            pattern: '^[a-f0-9]{24}$'
        - name: network
          in: query
          type: string
          description: Filter the list by an affiliate network
      responses:
        '200':
          description: The paginated list of affiliate products.
          schema:
            $ref: '#/definitions/AffiliateProductList'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: createAffiliateProduct
      tags:
        - Affiliate Products
      summary: Creates a new affiliate product
      description: Creates a new affiliate product
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOrUpdateAffiliateProductRequest'
      responses:
        '200':
          description: The created affiliate product
          schema:
            $ref: '#/definitions/AffiliateProduct'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/affiliate-products/{productId}':
    x-swagger-router-controller: affiliateProductsController
    get:
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: getAffiliateProduct
      tags:
        - Affiliate Products
      summary: Returns a specific affiliate product
      description: Returns an affiliate product specified by an id.
      parameters:
        - in: path
          name: productId
          type: string
          pattern: '^[a-f0-9]{24}$'
          required: true
      responses:
        '200':
          description: The affiliate product
          schema:
            $ref: '#/definitions/AffiliateProduct'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: updateAffiliateProduct
      tags:
        - Affiliate Products
      summary: Updates a specific affiliate product
      description: Updates a specific affiliate product
      parameters:
        - in: path
          name: productId
          type: string
          pattern: '^[a-f0-9]{24}$'
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOrUpdateAffiliateProductRequest'
      responses:
        '200':
          description: The updated affiliate product
          schema:
            $ref: '#/definitions/AffiliateProduct'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/affiliate-products/{productId}/image':
    x-swagger-router-controller: affiliateProductsController
    post:
      tags:
        - Affiliate Products
      operationId: uploadAffiliateProductImage
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Uploads an image for a specific affiliate product
      description: Uploads an image for a specific affiliate product
      consumes:
        - multipart/form-data
      parameters:
        - name: productId
          in: path
          required: true
          type: string
        - name: file
          in: formData
          description: The uploaded file data
          required: false
          type: file
      responses:
        '200':
          description: The updated affiliate product
          schema:
            $ref: '#/definitions/AffiliateProduct'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/signup:
    x-swagger-router-controller: accountController
    post:
      tags:
        - Auth
      summary: Creates a new account
      description: Creates a new account
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            additionalProperties: false
            required:
              - email
              - firstname
              - lastname
              - password
              - username
            properties:
              email:
                type: string
                minLength: 1
              password:
                type: string
                minLength: 1
              firstname:
                type: string
              lastname:
                type: string
              username:
                type: string
                minLength: 1
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth:
    x-swagger-router-controller: authController
    post:
      tags:
        - Auth
      summary: Creates a new auth token
      description: Creates an auth token and returns it.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            additionalProperties: false
            required:
              - email
              - password
            properties:
              email:
                description: The email address
                type: string
              password:
                description: The password
                type: string
      responses:
        '201':
          description: Authentication accepted
          schema:
            type: object
            properties:
              accessToken:
                type: string
              user:
                $ref: '#/definitions/User'
        '400':
          description: Authentication failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Auth
      summary: Invalidates the currently used auth token
      description: Invalidates the current auth token.
      security:
        - Bearer: []
      x-yeay-scope: user
      responses:
        '200':
          description: Auth successfully invalidate
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /passwordReset:
    x-swagger-router-controller: passwordResetController
    post:
      tags:
        - Auth
      summary: Triggers the password reset process for the requesting user
      description: Triggers a password reset
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
      responses:
        '201':
          description: Reset successfully initiated
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /fbAuth:
    x-swagger-router-controller: authController
    post:
      tags:
        - Auth
      operationId: fbAuth
      summary: Authenticates with Facebook login flow
      description: Authenticates with Facebook login flow
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            additionalProperties: false
            required:
              - fbUserId
              - fbAccessToken
              - fbExpirationDate
            properties:
              fbUserId:
                description: Facebook user id
                type: string
              fbAccessToken:
                description: Facbook access token
                type: string
              fbExpirationDate:
                description: Facbook login expiration date
                type: string
      responses:
        '201':
          description: Authentication accepted
          schema:
            type: object
            properties:
              accessToken:
                type: string
              user:
                $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /autocomplete/uniqueId:
    x-swagger-router-controller: autocompleteController
    get:
      tags:
        - Autocomplete
      summary: Generates a list of autocomplete suggestions for the given string
      description: Generates a list of autocomplete suggestions for the given string
      operationId: autocompleteUniqueId
      parameters:
        - name: q
          in: query
          type: string
          required: true
        - name: size
          type: number
          in: query
          default: 10
          minimum: 1
          maximum: 100
      responses:
        '200':
          description: The suggestions
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                uniqueId:
                  type: string
                avatarImageUrl:
                  type: string
                altAvatarImages:
                  $ref: '#/definitions/AltImageObject'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /autocomplete/productTag:
    x-swagger-router-controller: autocompleteController
    get:
      tags:
        - Autocomplete
      summary: Generates a list of autocomplete suggestions for the given string
      description: Generates a list of autocomplete suggestions for the given string
      operationId: autocompleteProductTag
      parameters:
        - name: q
          in: query
          type: string
          required: true
        - name: size
          type: number
          in: query
          default: 10
          minimum: 1
          maximum: 100
      responses:
        '200':
          description: The suggestions
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/products:
    x-swagger-router-controller: catalogProductsController
    get:
      tags:
        - Deprecated
      operationId: getCatalogProducts
      description: >
        **DEPRECATED**

        Browse the catalog with `GET /catalog/videos` instead.


        Retrieves a list products. Available filter fields are `id`, `sellerId`,
        `channelId`, `tags` and `isFeatured`
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - $ref: '#/parameters/queryFilter'
      responses:
        '200':
          description: The product list
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogProduct'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/products/{productId}':
    x-swagger-router-controller: catalogProductsController
    get:
      tags:
        - Deprecated
      operationId: getCatalogProduct
      description: |
        **DEPRECATED**
        Browse the catalog with `GET /catalog/videos/{videoId}` instead.

        Retrieves a specific product
      parameters:
        - name: productId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The requested product
          schema:
            $ref: '#/definitions/CatalogProduct'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/featuredSellers:
    x-swagger-router-controller: catalogSellerController
    get:
      tags:
        - Catalog
      operationId: getCatalogFeaturedSellers
      summary: Retrieves a list of featured sellers (users)
      description: Retrieves a list of featured sellers.
      security:
        - None: []
        - Bearer: []
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: The seller list
          schema:
            $ref: '#/definitions/CatalogFeaturedSellerList'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/sellers/{sellerId}':
    x-swagger-router-controller: catalogSellerController
    get:
      tags:
        - Catalog
      operationId: getCatalogSeller
      summary: Retrieves a specific user
      description: Retrieves details for a seller
      security:
        - None: []
        - Bearer: []
      parameters:
        - name: sellerId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The requested seller
          schema:
            $ref: '#/definitions/CatalogSellerDetails'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/users/search:
    x-swagger-router-controller: catalogSearchController
    get:
      tags:
        - Catalog
      operationId: searchCatalogUsers
      security:
        - None: []
        - Bearer: []
      summary: Retrieves users that match a given search term
      description: Search for users. Available filter is `uniqueId`
      parameters:
        - name: q
          in: query
          type: string
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageOffset'
        - $ref: '#/parameters/queryFilter'
      responses:
        '200':
          description: Catalog videos
          schema:
            $ref: '#/definitions/CatalogUserSearchResult'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/discover:
    x-swagger-router-controller: catalogContentController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getDiscoverContent
      description: >
        Retrieves content for catalog discovery.


        ### Client specific responses

        The **featured-challenge** field (if any) is only returned for android
        and ios clients >= 2.1.0.
      security:
        - None: []
        - Bearer: []
      parameters:
        - $ref: '#/parameters/queryCurrency'
        - $ref: '#/parameters/queryCountry'
        - $ref: '#/parameters/queryGender'
        - $ref: '#/parameters/headerLanguage'
        - name: latlon
          description: |
            Format: `lat,lon` - e.g. `52.49363,13.43539`
          in: query
          type: string
      responses:
        '200':
          description: The discover screen content
          schema:
            $ref: '#/definitions/CatalogDiscoverContent'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/discovery-stream:
    x-swagger-router-controller: catalogDiscoveryStreamController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getDiscoveryStream
      description: |
        Retrieves content for catalog discovery.
      security:
        - None: []
        - Bearer: []
      parameters:
        - $ref: '#/parameters/queryCurrency'
        - $ref: '#/parameters/queryCountry'
        - $ref: '#/parameters/queryGender'
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
        - $ref: '#/parameters/headerLanguage'
      responses:
        '200':
          description: >
            The discovery stream. Response is a paginated list of types of
            items. Type of item is an enum of `collection`, `challenge`, and
            `videoFeed`, `userFeed`.
          schema:
            allOf:
              - $ref: '#/definitions/PaginatedList'
              - properties:
                  items:
                    $ref: '#/definitions/DiscoveryStreamItem'
                required:
                  - items
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/feeds/home/1:
    x-swagger-router-controller: catalogHomeFeedController
    get:
      tags:
        - Catalog
      operationId: getHomeFeed_1
      summary: Retrieves content for the home feed
      description: |
        Retrieves content for the home feed.
      security:
        - None: []
        - Bearer: []
      parameters:
        - $ref: '#/parameters/queryCurrency'
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
      responses:
        '200':
          description: >
            Object containing paginated list of home feed videos and pagination
            metadata.
          schema:
            allOf:
              - $ref: '#/definitions/PaginatedList'
              - properties:
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogHomeFeedVideo'
                required:
                  - items
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/feeds/videos/{feedId}':
    x-swagger-router-controller: catalogVideoFeedController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getVideoFeed
      description: |
        Retrieves content for a specified video feed.
      security:
        - None: []
        - Bearer: []
      parameters:
        - name: feedId
          in: path
          type: string
          enum:
            - whats-new
            - on-fire
            - near-you
            - trending-videos
          required: true
        - $ref: '#/parameters/queryCurrency'
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
        - $ref: '#/parameters/queryCountry'
      responses:
        '200':
          description: >
            Object containing paginated list of catalog videos based on feed Id
            and pagination metadata.
          schema:
            allOf:
              - $ref: '#/definitions/PaginatedList'
              - properties:
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogVideo'
                required:
                  - items
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/feeds/users/{feedId}':
    x-swagger-router-controller: catalogUserFeedController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getUserFeed
      description: |
        Retrieves content for a specified user feed.
      security:
        - None: []
        - Bearer: []
      parameters:
        - name: feedId
          in: path
          type: string
          enum:
            - trending-people
            - top-sellers-near-you
          required: true
        - $ref: '#/parameters/queryCurrency'
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
        - $ref: '#/parameters/queryCountry'
      responses:
        '200':
          description: >
            Object containing paginated list of catalog users based on feed Id
            and pagination metadata.
          schema:
            allOf:
              - $ref: '#/definitions/PaginatedList'
              - properties:
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogSeller'
                required:
                  - items
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/channels:
    x-swagger-router-controller: catalogChannelsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getCatalogChannels
      description: Retrieves a list of all available Channels
      responses:
        '200':
          description: Available channels
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogChannel'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/videos:
    x-swagger-router-controller: catalogVideosController
    get:
      tags:
        - Catalog
      operationId: getCatalogVideos
      summary: Retrieves a list of publicly availabe videos
      description: >-
        Retrieves all catalog videos. Available filter fields are `id`,
        `sellerId`, `creatorId`, `channelId`, `tags`, `isFeatured` and
        `challengeId`
      security:
        - None: []
        - Bearer: []
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - $ref: '#/parameters/queryFilter'
        - $ref: '#/parameters/queryCurrency'
      responses:
        '200':
          description: Catalog videos
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogVideoDetails'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/videos/{videoId}':
    x-swagger-router-controller: catalogVideosController
    get:
      tags:
        - Catalog
      operationId: getCatalogVideo
      security:
        - None: []
        - Bearer: []
      summary: Retrieves a specific publicly availabe video
      description: Retrieves a catalog video
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - $ref: '#/parameters/queryCurrency'
      responses:
        '200':
          description: The requested video
          schema:
            $ref: '#/definitions/CatalogVideoDetails'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/videos/search:
    x-swagger-router-controller: catalogSearchController
    get:
      tags:
        - Catalog
      operationId: searchCatalogVideos
      security:
        - None: []
        - Bearer: []
      summary: Retrieves videos that match a given search term
      description: >-
        Search for videos. Available filters are `condition`, `category`,
        `country` and `gender`
      parameters:
        - name: q
          in: query
          type: string
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageOffset'
        - $ref: '#/parameters/queryFilter'
        - $ref: '#/parameters/queryCurrency'
      responses:
        '200':
          description: Catalog videos
          schema:
            $ref: '#/definitions/CatalogVideoSearchResult'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/challenges:
    x-swagger-router-controller: catalogChallengesController
    get:
      security:
        - None: []
        - Bearer: []
      tags:
        - Catalog
      summary: Retrieves a list of all available challenges
      description: >
        Retrieves a list of all available Challenges. If this endpoint is called
        with valid auth information, the reponse will contain a boolean
        **canParticipate** field on every challenge in the list.
      operationId: getCatalogChallenges
      parameters:
        - $ref: '#/parameters/headerLanguage'
      responses:
        '200':
          description: The list of challenges
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogChallengeListItem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/challenges/{challengeId}':
    x-swagger-router-controller: catalogChallengesController
    get:
      security:
        - None: []
        - Bearer: []
      tags:
        - Catalog
      summary: Retrieves a specific available challenge
      description: >
        Retrieves a single publicly available challenge. If this endpoint is
        called with valid auth information, the reponse will contain a boolean
        **canParticipate** field.
      operationId: getCatalogChallengeDetail
      parameters:
        - name: challengeId
          type: string
          required: true
          in: path
        - $ref: '#/parameters/headerLanguage'
      responses:
        '200':
          description: The challenge detail was successfully retrieved.
          schema:
            $ref: '#/definitions/CatalogChallengeListItem'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /catalog/collections:
    x-swagger-router-controller: catalogCollectionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      description: Retrieves a list of all available collections
      operationId: getCatalogCollections
      parameters:
        - $ref: '#/parameters/headerLanguage'
      responses:
        '200':
          description: The collection list
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogCollectionListItem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/collections/{collectionId}':
    x-swagger-router-controller: catalogCollectionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getCatalogCollection
      description: Retrieves a specific collection
      parameters:
        - $ref: '#/parameters/headerYeayClientVersion'
        - $ref: '#/parameters/headerYeayClientName'
        - $ref: '#/parameters/headerLanguage'
        - name: collectionId
          type: string
          required: true
          in: path
        - $ref: '#/parameters/queryCurrency'
      responses:
        '200':
          description: The requested collection
          schema:
            $ref: '#/definitions/CatalogCollection'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/catalog/collections/{collectionId}/videos':
    x-swagger-router-controller: catalogCollectionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getCatalogCollectionVideos
      description: Retrieves a paginated list of all videos in a collection
      parameters:
        - name: collectionId
          type: string
          required: true
          in: path
        - $ref: '#/parameters/queryCurrency'
        - $ref: '#/parameters/queryPaginationLimit'
        - $ref: '#/parameters/queryPaginationOffset'
      responses:
        '200':
          description: The paginated video list
          schema:
            $ref: '#/definitions/CatalogCollectionVideoList'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /challenges:
    x-swagger-router-controller: challengesController
    post:
      tags:
        - Challenges
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: createChallenge
      summary: Creates a new challenge
      description: Creates a new challenge
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateChallengeRequest'
      responses:
        '201':
          description: The challenge has been created successfully.
          schema:
            $ref: '#/definitions/Challenge'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      operationId: listChallenges
      tags:
        - Challenges
      summary: Returns a list of all challenges
      description: Returns a list of all challenges
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: The list of challenges.
          schema:
            type: array
            items:
              $ref: '#/definitions/Challenge'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/challenges/{challengeId}':
    x-swagger-router-controller: challengesController
    parameters:
      - name: challengeId
        in: path
        required: true
        type: string
    get:
      operationId: getChallengeDetail
      tags:
        - Challenges
      summary: Returns a specific challenge
      description: Returns a specific challenge
      security:
        - Bearer: []
      x-yeay-scope: admin
      responses:
        '200':
          description: The challenge was retrieved successfully.
          schema:
            $ref: '#/definitions/Challenge'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      operationId: deleteChallenge
      tags:
        - Challenges
      summary: Removes a specific challenge
      description: Removes a specific challenge
      security:
        - Bearer: []
      x-yeay-scope: admin
      responses:
        '204':
          description: The challenge has been deleted successfully.
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Challenges
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: updateChallenge
      summary: Updates a specific challenge
      description: Updates a specific challenge
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateChallengeRequest'
      responses:
        '200':
          description: The challenge has been updated successfully.
          schema:
            $ref: '#/definitions/Challenge'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/challenges/{challengeId}/image':
    x-swagger-router-controller: challengesController
    parameters:
      - name: challengeId
        in: path
        required: true
        type: string
    post:
      tags:
        - Challenges
      operationId: uploadChallengeImage
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Upload an image to a specific challenge
      description: Upload an image to a specific challenge
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: The image file representing the challenge image
          required: true
          type: file
      responses:
        '201':
          description: The image URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/challenges/{challengeId}/brandLogo':
    x-swagger-router-controller: challengesController
    parameters:
      - name: challengeId
        in: path
        required: true
        type: string
    post:
      tags:
        - Challenges
      operationId: uploadBrandLogo
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Upload a brand logo to a specific challenge
      description: Upload a brand logo to a specific challenge
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: The image file representing the brand logo
          required: true
          type: file
      responses:
        '201':
          description: The image URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/challenges/{challengeId}/translations':
    x-swagger-router-controller: challengesController
    get:
      tags:
        - Challenges
      security:
        - Bearer: []
      operationId: getChallengeTranslations
      summary: Retrieves translations for a specific challenge
      description: Retrieves translations for a specific challenge
      x-yeay-scope: admin
      parameters:
        - name: challengeId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The translations for a challenge
          schema:
            $ref: '#/definitions/ChallengeTranslations'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Challenges
      security:
        - Bearer: []
      operationId: updateChallengeTranslations
      summary: Updates all translations for a specific challenge
      description: Updates all translations for a specific challenge
      x-yeay-scope: admin
      parameters:
        - name: challengeId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChallengeTranslations'
      responses:
        '200':
          description: The updated Translations.
          schema:
            $ref: '#/definitions/ChallengeTranslations'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/challenges/{challengeId}/translations/{locale}':
    x-swagger-router-controller: challengesController
    get:
      tags:
        - Challenges
      security:
        - Bearer: []
      operationId: getChallengeTranslationByLocale
      summary: Retrieves the name and description of a challenge by a specific locale
      description: Retrieves the name and description of a challenge by a specific locale
      x-yeay-scope: admin
      parameters:
        - name: challengeId
          in: path
          type: string
          required: true
        - name: locale
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The name and description of a challenge for the specified locale.
          schema:
            $ref: '#/definitions/ChallengeTranslationPayload'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Challenges
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: updateChallengeTranslationByLocale
      summary: Updates the name and description of a challenge for a specific locale
      description: Updates the name and description of a challenge for a specific locale
      parameters:
        - name: challengeId
          in: path
          required: true
          type: string
        - name: locale
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChallengeTranslationPayload'
      responses:
        '200':
          description: The updated challenge name and description for the specified locale.
          schema:
            $ref: '#/definitions/ChallengeTranslationPayload'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Challenges
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: deleteChallengeTranslationByLocale
      summary: Removes the name and description of a challenge for a specific locale
      description: Removes the name and description of a challenge for a specific locale
      parameters:
        - name: challengeId
          in: path
          required: true
          type: string
        - name: locale
          in: path
          required: true
          type: string
      responses:
        '204':
          description: The locale details were deleted successfully.
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /export/challenge-payments/csv:
    x-swagger-router-controller: challengesController
    get:
      deprecated: true
      tags:
        - Deprecated
      produces:
        - application/json
        - text/csv
      operationId: exportAffiliatePaymentsAsCsv
      description: Generate a csv file of matching affiliate payments.
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - name: challengeIds
          in: query
          description: |
            An optional list of challenges to consider for export.
            By default all challenge orders will be exported.
          type: array
          items:
            type: string
        - name: startDate
          description: >
            The start date of the considered export period. (default today - 30
            days)
          in: query
          type: string
          format: date-time
        - name: endDate
          description: |
            The end date of the considered export period. (default today)
          in: query
          type: string
          format: date-time
      responses:
        '200':
          description: The csv file containing all matching affiliate payments.
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /channels:
    x-swagger-router-controller: channelsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: getChannels
      description: Retrieves all available channels
      responses:
        '200':
          description: The channel list
          schema:
            type: array
            items:
              $ref: '#/definitions/Channel'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: createChannel
      description: Creates a new channel
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateChannelRequest'
      responses:
        '201':
          description: The created channel
          schema:
            $ref: '#/definitions/Channel'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/channels/{channelId}':
    x-swagger-router-controller: channelsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: getChannel
      description: Retrieves a specific channel
      parameters:
        - name: channelId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The channel
          schema:
            $ref: '#/definitions/Channel'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: updateChannel
      description: Updates a channel
      parameters:
        - name: channelId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateChannelRequest'
      responses:
        '200':
          description: The channel
          schema:
            $ref: '#/definitions/Channel'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /chats:
    x-swagger-router-controller: chatsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getChats
      description: Retrieves the caller's chats
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
      responses:
        '200':
          description: The requested wishlist
          schema:
            type: array
            items:
              $ref: '#/definitions/Chat'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: createChat
      description: Creates a new chat between two users
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: false
          schema:
            $ref: '#/definitions/CreateChatRequest'
      responses:
        '201':
          description: The new chat
          schema:
            $ref: '#/definitions/Chat'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/chats/{chatId}':
    x-swagger-router-controller: chatsController
    post:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: sendChatMessage
      description: Creates a new message in a specific chat
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: path
          name: chatId
          required: true
          type: string
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              message:
                type: string
      responses:
        '201':
          description: A status
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: deleteChat
      description: >-
        Sets a chat as being ignored by the caller. Does not destroy the chat
        object.
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: path
          name: chatId
          required: true
          type: string
      responses:
        '201':
          description: The new chat
          schema:
            $ref: '#/definitions/Chat'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/chats/history/{chatId}':
    x-swagger-router-controller: chatsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getChatHistory
      description: Retrieves a list of messages for the given chat
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: path
          name: chatId
          required: true
          type: string
      responses:
        '201':
          description: A history of chat messages
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /collections:
    x-swagger-router-controller: collectionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: getCollections
      description: Lists all collections
      responses:
        '200':
          description: All available collections
          schema:
            type: array
            items:
              $ref: '#/definitions/Collection'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: createCollection
      description: Creates a new collection
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCollectionRequest'
      responses:
        '201':
          description: The created collection
          schema:
            $ref: '#/definitions/Collection'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/collections/{collectionId}':
    x-swagger-router-controller: collectionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: getCollection
      description: Retrieves a specific collection
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The collection
          schema:
            $ref: '#/definitions/Collection'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: updateCollection
      description: Updates a collection
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCollectionRequest'
      responses:
        '200':
          description: The collection
          schema:
            $ref: '#/definitions/Collection'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: deleteCollection
      description: Deletes a collection
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The collection was deleted successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/collections/{collectionId}/image':
    x-swagger-router-controller: collectionsController
    post:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      operationId: uploadCollectionImage
      description: Uploads an image for a collection
      x-yeay-scope: admin
      consumes:
        - multipart/form-data
      parameters:
        - name: collectionId
          in: path
          type: string
          required: true
        - name: file
          in: formData
          description: The uploaded file data
          required: false
          type: file
      responses:
        '201':
          description: The image URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/collections/{collectionId}/video':
    x-swagger-router-controller: collectionsController
    post:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      operationId: uploadCollectionVideo
      description: Uploads a video for a collection
      x-yeay-scope: admin
      consumes:
        - multipart/form-data
      parameters:
        - name: collectionId
          in: path
          type: string
          required: true
        - name: file
          in: formData
          description: The uploaded file data
          required: false
          type: file
      responses:
        '201':
          description: The video URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/collections/{collectionId}/translations':
    x-swagger-router-controller: collectionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      operationId: getCollectionTranslations
      description: Fetches the translations for a collection
      x-yeay-scope: admin
      parameters:
        - name: collectionId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The translations for the collection
          schema:
            $ref: '#/definitions/CollectionTranslations'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      operationId: updateCollectionTranslations
      description: updates all translations for a collection
      x-yeay-scope: admin
      parameters:
        - name: collectionId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CollectionTranslations'
      responses:
        '200':
          description: The updated translations.
          schema:
            $ref: '#/definitions/CollectionTranslations'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/collections/{collectionId}/translations/{locale}':
    x-swagger-router-controller: collectionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      operationId: getCollectionTranslationByLocale
      description: Fetches the name and description of a collection by a specific locale.
      x-yeay-scope: admin
      parameters:
        - name: collectionId
          in: path
          type: string
          required: true
        - name: locale
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The name and description of a collection for the specified locale.
          schema:
            $ref: '#/definitions/CollectionTranslationPayload'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: updateCollectionTranslationByLocale
      description: Updates the name and description of a collection for a specific locale.
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: locale
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CollectionTranslationPayload'
      responses:
        '200':
          description: >-
            The updated collection name and description for the specified
            locale.
          schema:
            $ref: '#/definitions/CollectionTranslationPayload'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: deleteCollectionTranslationByLocale
      description: Deletes the name and description of a collection for a specific locale.
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: locale
          in: path
          required: true
          type: string
      responses:
        '204':
          description: The locale details were deleted successfully.
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/products:
    x-swagger-router-controller: dataTablesController
    get:
      tags:
        - Deprecated
      operationId: getDtProducts
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/queryFilter'
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
        - $ref: '#/parameters/dtCategory'
      responses:
        '200':
          description: Datatable result
          schema:
            $ref: '#/definitions/DataTableProductsResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/videos:
    x-swagger-router-controller: dataTablesController
    get:
      tags:
        - Datatables
      operationId: getDtVideos
      security:
        - Bearer: []
      summary: Datatables endpoint for videos
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/queryFilter'
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
        - $ref: '#/parameters/dtCategory'
      responses:
        '200':
          description: Datatable result
          schema:
            $ref: '#/definitions/DataTableVideosResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/orders:
    x-swagger-router-controller: dataTablesController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getDtOrders
      security:
        - Bearer: []
      x-yeay-scope: user
      description: >-
        Applicable filters are `id`, `sellerId`, `buyerId`, and `isChallenge`
        (boolean)
      parameters:
        - $ref: '#/parameters/queryFilter'
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
      responses:
        '200':
          description: Datatable result
          schema:
            $ref: '#/definitions/DataTableOrdersResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/users:
    x-swagger-router-controller: dataTablesController
    get:
      tags:
        - Datatables
      operationId: getDtUsers
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Datatables endpoint for users
      parameters:
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
      responses:
        '200':
          description: Datatable result
          schema:
            $ref: '#/definitions/DataTableUsersResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/featuredVideos:
    x-swagger-router-controller: dataTablesController
    get:
      tags:
        - Datatables
      operationId: getDtFeaturedVideos
      description: Returns a list of all videos with their featuring status
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Datatables endpoint for featured videos
      parameters:
        - name: isFeatured
          type: boolean
          default: true
          in: query
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
        - $ref: '#/parameters/dtCategory'
      responses:
        '200':
          description: List of videos
          schema:
            $ref: '#/definitions/DataTableFeaturedVideosResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/featuredSellers:
    x-swagger-router-controller: dataTablesController
    get:
      tags:
        - Datatables
      operationId: getDtFeaturedSellers
      description: Returns a list of all users with their featuring status
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Datatables endpoint for featured sellers
      parameters:
        - name: isFeatured
          type: boolean
          default: true
          in: query
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
      responses:
        '200':
          description: List of videos
          schema:
            $ref: '#/definitions/DataTableFeaturedSellersResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/disapprovedVideos:
    x-swagger-router-controller: dataTablesController
    get:
      tags:
        - Datatables
      operationId: getDtDisapprovedVideos
      description: Returns a list of all disapproved videos
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Datatables endpoint for disapproved videos
      parameters:
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
      responses:
        '200':
          description: List of videos
          schema:
            $ref: '#/definitions/DataTableDisapprovedVideosResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /datatables/affiliateProductsSearch:
    x-swagger-router-controller: dataTablesController
    get:
      tags:
        - Datatables
      operationId: searchDtAffiliateProducts
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Datatables endpoint for affiliate product search
      parameters:
        - $ref: '#/parameters/dtDraw'
        - $ref: '#/parameters/dtStart'
        - $ref: '#/parameters/dtLength'
        - $ref: '#/parameters/dtOrder'
        - $ref: '#/parameters/dtColumns'
        - $ref: '#/parameters/dtSearch'
        - name: excludeIds
          in: query
          required: false
          type: array
          items:
            type: string
        - name: network
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Datatable result
          schema:
            $ref: '#/definitions/DataTableAffiliateProductsResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /featuredTags:
    x-swagger-router-controller: featuredTagsController
    get:
      tags:
        - Tags
      operationId: getFeaturedTags
      summary: Retrieves a list of all featured tags
      description: Retrieves a list of all featured tags
      responses:
        '200':
          description: The ordered list of featured tags
          schema:
            type: array
            additionalProperties: false
            items:
              $ref: '#/definitions/FeaturedTag'
    post:
      tags:
        - Tags
      operationId: createFeaturedTag
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Creates a featured tag
      description: Creates a featured tag
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFeaturedTagRequest'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/FeaturedTag'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/featuredTags/{tagId}':
    x-swagger-router-controller: featuredTagsController
    get:
      tags:
        - Tags
      operationId: getFeaturedTag
      summary: Retrieves a specific featured tag
      description: Retrieves a specific featured tag
      parameters:
        - name: tagId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeaturedTag'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Tags
      operationId: updateFeaturedTag
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Updates a specific featured tag
      description: Updates a specific featured tag
      parameters:
        - name: tagId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFeaturedTagRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeaturedTag'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Tags
      security:
        - Bearer: []
      x-yeay-scope: admin
      operationId: deleteFeaturedTag
      summary: Deletes a specific featured tag
      description: Deletes a specific featured tag
      parameters:
        - name: tagId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/featuredTags/{tagId}/image':
    x-swagger-router-controller: featuredTagsController
    post:
      tags:
        - Tags
      security:
        - Bearer: []
      operationId: uploadTagImage
      summary: Uploads an image for a specific featured tag
      description: Uploads an image for a specific featured tag
      x-yeay-scope: admin
      consumes:
        - multipart/form-data
      parameters:
        - name: tagId
          in: path
          type: string
          required: true
        - name: file
          in: formData
          description: The uploaded file data
          required: true
          type: file
      responses:
        '201':
          description: The image URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /feedback/messages:
    x-swagger-router-controller: feedbackController
    post:
      tags:
        - Feedback
      operationId: sendFeedbackMessage
      summary: Sends a user feedback message
      description: Sends a user feedback message
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wishlists:
    x-swagger-router-controller: legacyWishlistsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getWishlist
      description: Retrieves the caller's wishlist
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryCurrency'
      responses:
        '200':
          description: The requested wishlist
          schema:
            $ref: '#/definitions/LegacyWishlist'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: createWishlist
      security:
        - Bearer: []
      x-yeay-scope: user
      description: Creates a new wishlist
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: false
          schema:
            $ref: '#/definitions/CreateLegacyWishlistRequest'
      responses:
        '201':
          description: The created wishlist
          schema:
            $ref: '#/definitions/LegacyWishlist'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/wishlists/{productId}':
    x-swagger-router-controller: legacyWishlistsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: wishlistStatus
      description: Determines whether a product / video is in a user's wishlist
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: path
          name: productId
          required: true
          type: string
      responses:
        '200':
          description: The requested wishlist
          schema:
            type: object
            properties:
              status:
                type: boolean
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: addProductToWishlist
      description: Adds a product to a wishlist
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: path
          name: productId
          required: true
          type: string
      responses:
        '200':
          description: The updated wishlist
          schema:
            $ref: '#/definitions/LegacyWishlist'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: removeProductFromWishlist
      description: Deletes a product from a wishlist
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: path
          name: productId
          required: true
          type: string
      responses:
        '200':
          description: The updated wishlist
          schema:
            $ref: '#/definitions/LegacyWishlist'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /likes:
    x-swagger-router-controller: likesController
    get:
      deprecated: true
      tags:
        - Deprecated
      description: Returns all likes for the requesting user
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: All likes
          schema:
            type: array
            items:
              $ref: '#/definitions/Like'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /definitions:
    x-swagger-router-controller: definitionsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
        - None: []
      operationId: getDefinitions
      description: Loads a set of definitions
      parameters:
        - name: query
          in: query
          required: false
          type: string
      responses:
        '200':
          description: A collection of matching definitions
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/featuredSellers/{userId}':
    x-swagger-router-controller: featuredSellersController
    put:
      tags:
        - Featured videos & sellers
      operationId: updateSeller
      summary: >-
        Flags a specific user as 'featured' and sets the according featured
        ranking
      description: Updates a users's featured status and ranking
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - name: userId
          type: string
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              isFeatured:
                type: boolean
              ranking:
                type: number
      responses:
        '200':
          description: Featured settings updated successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/featuredVideos/{videoId}':
    x-swagger-router-controller: featuredVideosController
    put:
      tags:
        - Featured videos & sellers
      operationId: updateFeaturedVideo
      summary: >-
        Flags a specific video as 'featured' and sets the according featured
        ranking
      description: Updates the featured settings for a specific video
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            description: Featured settings for this video
            type: object
            properties:
              isFeatured:
                type: boolean
              ranking:
                type: number
      responses:
        '200':
          description: Featured video settings updated successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /metrics:
    x-swagger-router-controller: metricsController
    get:
      tags:
        - Misc
      summary: Loads myYEAY dashboard metrics for the requesting user
      description: Returns metrics for the user
      operationId: getMetrics
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: query
          name: from
          type: string
        - in: query
          name: to
          type: string
      responses:
        '200':
          description: The metrics
          schema:
            $ref: '#/definitions/Metrics'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /validation/uniqueId:
    x-swagger-router-controller: userValidationController
    post:
      tags:
        - Misc
      summary: >-
        Validates that a uniqueId can be used for signup and suggests
        alternatives if invalid
      description: >
        Validate the given uniqueId if it matches the required format and if its
        not taken by another user.

        In case it's not available, this api endpoint will respond with a list
        of suggestions.
      operationId: validateUniqueId
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: Validation request for uniqueId
            type: object
            properties:
              uniqueId:
                type: string
      responses:
        '200':
          description: Availability response
          schema:
            $ref: '#/definitions/UniqueIdValidationResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /validation/email:
    x-swagger-router-controller: userValidationController
    post:
      tags:
        - Misc
      summary: Validates that an email can be used for signup
      description: |
        Validate the given email if it matches the required format and
        constraints (e.g. not in use by other user).
      operationId: validateEmail
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: Validation request for email address
            type: object
            properties:
              email:
                type: string
                minLength: 5
                maxLength: 1024
      responses:
        '200':
          description: Email validation response
          schema:
            type: object
            properties:
              isValid:
                type: boolean
                description: Email is valid (=true) or not (=false)
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /recommendations/home-feed/videos:
    x-swagger-router-controller: homeFeedRecommenderController
    post:
      tags:
        - Misc
      summary: Utility endpoint to set the current home feed video recommendations
      description: |
        Submits the current home feed video recommendations.
      operationId: submitRecommendations
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              newVideoIds:
                type: array
                items:
                  type: string
              topAndTrendingVideoIds:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Succcessfully recieved recommendations
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /notifications:
    x-swagger-router-controller: notificationsController
    get:
      operationId: getNotifications
      tags:
        - Notifications
      summary: Retrieves all notifications for the requesting user
      description: Retrieves all notifications for the requesting user
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - name: since
          in: query
          type: string
          format: date-time
          description: |
            ISO date, e.g. 2017-06-06T13:28:27.360Z
        - name: locale
          in: query
          type: string
          default: en
          description: >
            The locale to consider for notification translations.

            Supported are ISO 639-1 and ISO 639-2 codes.

            If no locale is given, or no translation for the given language is
            available the api falls back to 'en'.
          pattern: '[a-z]'
          minLength: 2
          maxLength: 3
      responses:
        '200':
          description: All notifications
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orders:
    x-swagger-router-controller: ordersController
    get:
      deprecated: true
      tags:
        - Deprecated
      description: >-
        Returns all orders for the requesting user. Available filter fields are
        `buyerId`, `sellerId`, `productId` and `status`.
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - $ref: '#/parameters/queryFilter'
      responses:
        '200':
          description: All orders
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/orders/{orderId}':
    x-swagger-router-controller: ordersController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getOrder
      description: Returns a specific order
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The order
          schema:
            $ref: '#/definitions/OrderDetails'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/orders/{orderId}/shipment':
    x-swagger-router-controller: ordersController
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: shipOrder
      description: Marks an order shipped
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              carrier:
                type: string
              trackingNumber:
                type: string
      responses:
        '200':
          description: The shipped order
          schema:
            $ref: '#/definitions/Order'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/orders/{orderId}/cancellation':
    x-swagger-router-controller: ordersController
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: cancelOrder
      description: Creates a cancellation for the order
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelOrderRequest'
      responses:
        '200':
          description: The cancelled order
          schema:
            $ref: '#/definitions/Order'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/orders/{orderId}/closing':
    x-swagger-router-controller: ordersController
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: closeOrder
      description: Closes an order
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The closed order
          schema:
            $ref: '#/definitions/Order'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /orders/salesinfo:
    x-swagger-router-controller: ordersController
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: orderInfo
      description: >
        This deprecated endpoint will always respond with `{"availability":
        "offline"}` since orders are not supported anymore`
      responses:
        '200':
          description: The sales information
          schema:
            type: object
            properties:
              availability:
                type: string
                default: offline
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /export/orders/csv:
    x-swagger-router-controller: ordersController
    get:
      deprecated: true
      tags:
        - Deprecated
      produces:
        - application/json - text/csv
      operationId: exportOrdersAsCsv
      description: Generate a csv file of matching orders.
      security:
        - Bearer: []
      x-yeay-scope: admin
      parameters:
        - name: sellerId
          in: query
          description: |
            An optional userId to consider for export.
            By default all orders will be exported.
          type: string
          items:
            type: string
        - name: startDate
          description: >
            The start date of the considered export period. (default today - 30
            days)
          in: query
          type: string
          format: date-time
        - name: endDate
          description: |
            The end date of the considered export period. (default today)
          in: query
          type: string
          format: date-time
      responses:
        '200':
          description: The csv file containing all matching orders.
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /products:
    x-swagger-router-controller: productsController
    get:
      deprecated: true
      tags:
        - Deprecated
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Retrieve a list of all products
      description: |
        **DEPRECATED**. Products are no longer a thing.

        Returns a list of all products the current user is allowed to see.

        Supported query filters:
        - `id` - product id
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - $ref: '#/parameters/queryFilter'
      responses:
        '200':
          description: The product list
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: createProduct
      security:
        - Bearer: []
      x-yeay-scope: user
      description: |
        **DEPRECATED**. Creates a new Product
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProductRequest'
      responses:
        '201':
          description: The created product
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/products/{productId}':
    x-swagger-router-controller: productsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getProduct
      security:
        - Bearer: []
      x-yeay-scope: user
      description: |
        **DEPRECATED** Returns a product
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: productId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The product
          schema:
            $ref: '#/definitions/Product'
        '404':
          description: Unknown product
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      deprecated: true
      tags:
        - Deprecated
      operationId: updateProduct
      security:
        - Bearer: []
      x-yeay-scope: user
      description: |
        **DEPRECATED** Updates an existing product
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: productId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProductRequest'
      responses:
        '200':
          description: The updated product
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      deprecated: true
      tags:
        - Deprecated
      operationId: deleteProduct
      security:
        - Bearer: []
      x-yeay-scope: user
      description: |
        **DEPRECATED** Deletes a product (including it's video)
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: productId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The product was deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/products/{productId}/images':
    x-swagger-router-controller: productsController
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: uploadImage
      security:
        - Bearer: []
      x-yeay-scope: user
      description: |
        **DEPRECATED** Uploads the product image
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: productId
          in: path
          required: true
          type: string
        - name: file
          in: formData
          description: The uploaded file data
          required: false
          type: file
      responses:
        '201':
          description: The image URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      deprecated: true
      tags:
        - Deprecated
      operationId: deleteImage
      security:
        - Bearer: []
      x-yeay-scope: user
      description: |
        **DEPRECATED** Deletes the product image
      parameters:
        - name: productId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The image was deleted successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/products/{productId}/videos':
    x-swagger-router-controller: productsController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getProductVideos
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Retrieve a list of all videos assigned to a product
      description: >
        **DEPRECATED**


        Returns a list of all videos the are assigned to the given product. The
        requesting user

        must have access to the product in order to see the videos.
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: productId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The video list
          schema:
            type: array
            items:
              $ref: '#/definitions/Video'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: uploadProductVideo
      security:
        - Bearer: []
      x-yeay-scope: user
      description: >
        **DEPRECATED**: Please use `POST /videos/{videoId}/file` instead.


        Uploads a video file. If there exists no video entity for the product, a
        new one will be created automatically
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: productId
          in: path
          required: true
          type: string
        - name: file
          in: formData
          description: The uploaded file data
          required: true
          type: file
      responses:
        '201':
          description: The product video entity
          schema:
            $ref: '#/definitions/Video'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /me/purchaseRequests:
    x-swagger-router-controller: purchaseRequestController
    post:
      tags:
        - Users
      operationId: createPurchaseRequest
      summary: Creates a new purchase request for the requesting user
      description: Creates a new purchase request for the requesting user
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - productId
              - address
            properties:
              productId:
                type: string
              videoId:
                type: string
              email:
                type: string
              phoneNumber:
                type: string
              address:
                $ref: '#/definitions/Address'
      responses:
        '200':
          description: The created purchase request
          schema:
            $ref: '#/definitions/PurchaseRequest'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /reviews/sellers:
    x-swagger-router-controller: reviewsController
    post:
      deprecated: true
      tags:
        - Deprecated
      description: Create a order based review of a seller.
      operationId: createSellerReview
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSellerReviewRequest'
      responses:
        '201':
          description: The created review
          schema:
            type: array
            items:
              $ref: '#/definitions/SellerReview'
        '400':
          description: >
            Creation of review is not possible. Possible reasons:

            - The referenced order is unknown (INVALID_ORDER).

            - The referenced order can not be reviewed yet
            (INVALID_ORDER_STATUS).
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: |
            Creation of review is not possible. Possible reasons:
            - User is not allowed to create a review for the referenced order
              (REVIEW_CREATION_RESTRICTED_TO_BUYER).
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: |
            Creation of review is not possible. Possible reasons:
            - The referenced order is already reviewed (DUPLICATED_REVIEW).
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /sales/video-commissions:
    x-swagger-router-controller: salesVideoCommissionController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getVideoCommissions
      description: >
        Returns a list of aggregated commissions per video. A commission is
        available if the

        underlying order is in status `paid`, `shipped` or `closed`. The
        commission contains

        a list of the 3 most recent transactions ordered by date descending.
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
      responses:
        '200':
          description: The video commission list
          schema:
            $ref: '#/definitions/SalesVideoCommissionList'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/sales/video-commissions/{videoId}/transactions':
    x-swagger-router-controller: salesVideoCommissionController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getVideoCommissionTransactions
      description: >
        Returns all transactions that result in a commission for a given video.
        The underlying

        orders have to be in status `paid`, `shipped` or `closed`.
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
        - name: videoId
          required: true
          in: path
          type: string
      responses:
        '200':
          description: The video commission transaction list
          schema:
            $ref: '#/definitions/SalesVideoCommissionTransactionList'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /me:
    x-swagger-router-controller: userController
    get:
      tags:
        - Users
      operationId: getMe
      summary: Retrieves details for the requesting user
      description: Returns the currently logged in user
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
      responses:
        '200':
          description: The current user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Users
      operationId: updateMe
      summary: Updates the requesting user
      description: Updates the user profile
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              firstname:
                type: string
              lastname:
                type: string
              address:
                $ref: '#/definitions/Address'
              gender:
                type: string
              minAgeRange:
                type: number
              birthday:
                type: string
                format: date
              phoneNumber:
                type: string
              locale:
                type: string
              currency:
                type: string
                pattern: '[A-Z]'
                minLength: 3
                maxLength: 3
              profileBio:
                type: string
              yeayScore:
                type: integer
                minimum: 0
      responses:
        '200':
          description: The updated user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Users
      x-yeay-scope: user
      operationId: deleteMe
      security:
        - Bearer: []
      summary: Deletes the requesting user
      description: Deletes the authenticated user
      responses:
        '204':
          description: The current user has successfully been deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /me/avatarImage:
    x-swagger-router-controller: userController
    post:
      tags:
        - Users
      operationId: uploadAvatarImage
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Uploads an avatar image for the requesting user
      description: Uploads the avatar image
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: file
          in: formData
          description: The uploaded file data
          required: false
          type: file
      responses:
        '201':
          description: The image URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Users
      operationId: deleteAvatarImage
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Removes the avatar image from the requesting user
      description: Deletes the avatar image
      responses:
        '200':
          description: The image was deleted successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /me/splashImage:
    x-swagger-router-controller: userController
    post:
      tags:
        - Users
      operationId: uploadSplashImage
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Uploads a splash image for the requesting user
      description: Uploads the splash image
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: file
          in: formData
          description: The uploaded file data
          required: false
          type: file
      responses:
        '201':
          description: The image URL
          schema:
            $ref: '#/definitions/ImageUploadResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Users
      operationId: deleteSplashImage
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Removes the splash image from the requesting user
      description: Deletes the splash image
      responses:
        '200':
          description: The image was deleted successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /me/paymentAccounts:
    x-swagger-router-controller: paymentsController
    get:
      deprecated: true
      tags:
        - Deprecated
      x-yeay-scope: user
      operationId: getPaymentAccounts
      security:
        - Bearer: []
      description: Retrieves a list of all of my payment methods
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: The method list
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentAccount'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      deprecated: true
      tags:
        - Deprecated
      operationId: addPaymentAccount
      security:
        - Bearer: []
      x-yeay-scope: user
      description: Creates a payment account based on a token (stripe-only right now)
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              paymentMethodType:
                type: string
              paymentMethodToken:
                type: string
              name:
                type: string
              source:
                type: string
      responses:
        '201':
          description: The image URL
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /me/paymentProfile:
    x-swagger-router-controller: paymentsController
    get:
      deprecated: true
      tags:
        - Deprecated
      x-yeay-scope: user
      operationId: getPaymentProfile
      security:
        - Bearer: []
      description: Retrieves a User as described by the gateway being specified by type
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPaymentType'
      responses:
        '200':
          description: The payment profile
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      deprecated: true
      tags:
        - Deprecated
      operationId: updatePaymentProfile
      security:
        - Bearer: []
      x-yeay-scope: user
      description: >-
        Modifies the paymentProfile based on the parameters provided. Currently,
        only defaultCard and stripe are supported.
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              defaultSource:
                type: string
      responses:
        '200':
          description: The updated paymentProfile
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users:
    x-swagger-router-controller: userController
    get:
      tags:
        - Users
      x-yeay-scope: admin
      operationId: getUsers
      security:
        - Bearer: []
      summary: Retrieves a list of all users
      description: Retrieves a list of all users
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: The user list
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/users/{userId}':
    x-swagger-router-controller: userController
    get:
      tags:
        - Users
      x-yeay-scope: user
      operationId: getUser
      security:
        - Bearer: []
      summary: Retrieves a specific user
      description: Retrieves a specific user
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Users
      x-yeay-scope: admin
      operationId: updateUser
      security:
        - Bearer: []
      summary: Updates a specific user
      description: Updates a user
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      responses:
        '200':
          description: The updated user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Users
      x-yeay-scope: admin
      operationId: deleteUser
      security:
        - Bearer: []
      summary: Removes a specific user
      description: Deletes a user
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Ok
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/users/{userId}/follow':
    x-swagger-router-controller: userController
    post:
      tags:
        - Users
      operationId: followUser
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: >-
        Creates a 'following' relationship between the requesting and the
        specified user
      description: Follows a User
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: userId
          in: path
          type: string
          required: true
      responses:
        '201':
          description: The Follow object
          schema:
            $ref: '#/definitions/Follow'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Users
      operationId: unfollowUser
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: >-
        Removes the 'following' relationship between the requesting and the
        specified user
      description: Unfollows a User
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: userId
          in: path
          type: string
          required: true
      responses:
        '201':
          description: >-
            A status string letting you know if the user was unfollowed, or
            never followed in the first place
          schema:
            type: object
            properties:
              status:
                type: string
              followId:
                type: string
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/users/{userId}/following':
    x-swagger-router-controller: userController
    get:
      tags:
        - Users
      operationId: getUserFollows
      summary: Retrieves a list of users that the specified user is following
      description: Retrieves a list of users that the specified user is following
      security:
        - None: []
        - Bearer: []
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: A list of users the specified user is following
          schema:
            type: array
            items:
              type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/users/{userId}/followers':
    x-swagger-router-controller: userController
    get:
      tags:
        - Users
      operationId: getFollowersOfUser
      summary: Retrieves a list of users that follow the specified users
      description: Retrieves a list of users that follow the specified users
      security:
        - None: []
        - Bearer: []
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: A list of the specified user's followers
          schema:
            type: array
            items:
              type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/users/{userId}/settings':
    x-swagger-router-controller: userSettingsController
    get:
      tags:
        - Users
      operationId: getPublicUserSettings
      summary: Retrieves the public settings for a specific user
      description: Retrieves the public settings for a specific user
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The user settings object
          schema:
            $ref: '#/definitions/UserSettingsPublic'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/devices:
    x-swagger-router-controller: devicesController
    get:
      tags:
        - Users
      operationId: getDevices
      summary: Retrieves a list of devices that are associated with the requesting user
      description: Retrieves a list of devices that are associated with the requesting user
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
      responses:
        '200':
          description: The requested list of devices
          schema:
            type: array
            items:
              type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - Users
      operationId: createDevice
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Creates a new device for the requesting user
      description: Creates a data structure containing device info for push notifications
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDeviceRequest'
      responses:
        '201':
          description: The info object
          schema:
            $ref: '#/definitions/Device'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/users/devices/{deviceId}':
    x-swagger-router-controller: devicesController
    put:
      tags:
        - Users
      x-yeay-scope: user
      operationId: updateDevice
      security:
        - Bearer: []
      summary: Updates a specifie device for the requesting user
      description: Updates a user's device
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: deviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDeviceRequest'
      responses:
        '201':
          description: The info object
          schema:
            $ref: '#/definitions/Device'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /userSettings:
    x-swagger-router-controller: userSettingsController
    get:
      tags:
        - Users
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: getUserSettings
      summary: Retrieves private settings for the requesting user
      description: Retrieves private settings for the requesting user
      parameters:
        - $ref: '#/parameters/headerAsUser'
      responses:
        '200':
          description: The channel
          schema:
            $ref: '#/definitions/UserSettings'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Users
      security:
        - Bearer: []
      x-yeay-scope: user
      operationId: updateUserSettings
      summary: Updates private settings for the requesting user
      description: Updates user settings for the requesting user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserSettingsPrivate'
      responses:
        '200':
          description: The channel
          schema:
            $ref: '#/definitions/UserSettings'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /utility/version:
    x-swagger-router-controller: utilityController
    get:
      tags:
        - Utility
      operationId: getVersion
      summary: Retrieves the current API version
      description: Retrieves the current API version
      responses:
        '200':
          description: The current API version
          schema:
            type: object
            properties:
              version:
                type: string
  /utility/facebookUsers:
    x-swagger-router-controller: utilityController
    post:
      tags:
        - Utility
      operationId: facebookUsers
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: >-
        Retrieves a list of users that are associated to the given list of
        Facebook IDs
      description: >-
        Retrieves a list of users that are associated to the given list of
        Facebook IDs
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              facebookIds:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: A list of YEAY users
          schema:
            type: array
            items:
              type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /utility/appsettings:
    x-swagger-router-controller: utilityController
    get:
      tags:
        - Utility
      operationId: getAppSettings
      summary: Retrieves app settings for dynamic runtime config of client apps
      description: Retrieves app settings for dynamic runtime config of client apps
      responses:
        '200':
          description: The AppSetting object
          schema:
            $ref: '#/definitions/AppSetting'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /utility/status:
    x-swagger-router-controller: utilityController
    get:
      tags:
        - Utility
      operationId: getStatus
      summary: Fetches the status based on headers sent by the HTTP client
      description: Fetches the status based on headers sent by the HTTP client
      responses:
        '200':
          description: The application status.
          schema:
            $ref: '#/definitions/AppStatus'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /videoReviewQueue:
    x-swagger-router-controller: reviewController
    get:
      tags:
        - Product & Video
      operationId: getVideoReviewQueue
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Retrieves the current video review queue
      description: Retrieves the current video review queue
      responses:
        '200':
          description: Videos that need a review
          schema:
            type: array
            items:
              $ref: '#/definitions/Video'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /videoReviewQueue/approval:
    x-swagger-router-controller: reviewController
    post:
      tags:
        - Product & Video
      operationId: approveVideo
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Approve a video in the review process
      description: Approves a video
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VideoApprovalRequest'
      responses:
        '201':
          description: Approval accepted
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /videoReviewQueue/disapproval:
    x-swagger-router-controller: reviewController
    post:
      tags:
        - Product & Video
      operationId: disapproveVideo
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Disapprove a video in the review process
      description: Dispproves a video
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VideoDisapprovalRequest'
      responses:
        '201':
          description: Disapproval accepted
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /videoReviewQueue/undisapproval:
    x-swagger-router-controller: reviewController
    post:
      tags:
        - Product & Video
      operationId: unDisapproveVideo
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Removes a disapproval from a disapproved video
      description: Removes a disapproval from a video
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VideoUnDisapprovalRequest'
      responses:
        '200':
          description: Disapproval removed
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /videos:
    x-swagger-router-controller: videosController
    get:
      tags:
        - Product & Video
      operationId: getVideos
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Retrieves a list of all videos for the requesting user
      description: Lists all videos
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
        - $ref: '#/parameters/queryFilter'
      responses:
        '200':
          description: The video list
          schema:
            type: array
            items:
              $ref: '#/definitions/Video'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - Product & Video
      operationId: createVideo
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Creates a new video
      description: >
        Creates a new video


        #### Challenge Referencing


        You can pass an optional `challengeId` parameter in order to let the
        video creator participate in a challenge.

        **NOTE**: The request may fail when a given challenge is not active.
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateVideoRequest'
      responses:
        '201':
          description: The created video
          schema:
            $ref: '#/definitions/Video'
        '409':
          description: |
            Cannot create the video.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}':
    x-swagger-router-controller: videosController
    get:
      tags:
        - Product & Video
      operationId: getVideo
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Retrieves a specific video for the requesting user
      description: Retrieves a specific video
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The video
          schema:
            $ref: '#/definitions/Video'
        '404':
          description: Video does not exists
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Product & Video
      operationId: updateVideo
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Updates an existing video for the requesting user
      description: Updates an existing video
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateVideoRequest'
      responses:
        '200':
          description: The updated video
          schema:
            $ref: '#/definitions/Video'
        '404':
          description: Video does not exists
        '409':
          description: |
            Cannot update the video.
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Product & Video
      operationId: deleteVideo
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Removes a video for the requesting user
      description: Delete an video
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
      responses:
        '204':
          description: Video deletion successfull
        '404':
          description: Video does not exists
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}/file':
    x-swagger-router-controller: videosController
    post:
      tags:
        - Product & Video
      operationId: uploadVideoFile
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Uploads a video file for a specific video
      description: Uploads a file to a video
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: videoId
          in: path
          required: true
          type: string
        - name: file
          in: formData
          description: The uploaded file data
          required: false
          type: file
      responses:
        '201':
          description: The video entity
          schema:
            $ref: '#/definitions/Video'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}/like':
    x-swagger-router-controller: videoLikesController
    get:
      tags:
        - Product & Video
      operationId: getLike
      summary: Detmerines whether the requesting user likes a specific video
      description: Determines whether a video is liked by a user
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - in: path
          name: videoId
          type: string
          required: true
      responses:
        '200':
          description: The like object if the user likes the video
          schema:
            $ref: '#/definitions/Like'
        '201':
          description: A status of false if the user does not like the video
          schema:
            type: object
            properties:
              status:
                type: boolean
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - Product & Video
      operationId: likeVideo
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Adds a like of the requesting user to a specific video
      description: Likes a video
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: videoId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The existing like object if the video was liked already
          schema:
            allOf:
              - $ref: '#/definitions/Like'
              - properties:
                  videoTotalLikes:
                    type: number
        '201':
          description: The created like object
          schema:
            allOf:
              - $ref: '#/definitions/Like'
              - properties:
                  videoTotalLikes:
                    type: number
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Product & Video
      operationId: unlikeVideo
      security:
        - Bearer: []
      x-yeay-scope: user
      summary: Removes a like of the requesting user from a specific video
      description: Unlikes a video
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - name: videoId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: >-
            A status string letting you know if the video was unliked or never
            liked in the first place
          schema:
            type: object
            properties:
              status:
                type: string
              likeId:
                type: string
              videoTotalLikes:
                type: number
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /videos/likes:
    x-swagger-router-controller: videoLikesController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getLikes
      summary: Retrieves a list of videos that the requesting user likes
      description: Returns a list of Videos that the current user likes
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: A list of videos you like
          schema:
            type: array
            items:
              type: object
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}/views':
    x-swagger-router-controller: videosController
    post:
      tags:
        - Product & Video
      operationId: addVideoView
      summary: Counts a view event on a specific video
      description: Counts a new video view
      security:
        - None: []
        - Bearer: []
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}/view-stopped':
    x-swagger-router-controller: videosController
    post:
      tags:
        - Product & Video
      operationId: addVideoViewStopped
      summary: Counts a 'video was stopped' event on a specific video
      description: Counts a new stopped video view
      security:
        - None: []
        - Bearer: []
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VideoViewStoppedRequest'
      responses:
        '204':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}/comments':
    x-swagger-router-controller: videoCommentsController
    post:
      tags:
        - Product & Video
      operationId: createVideoComment
      summary: Creates a comment on a specific video authored by the requesting user
      description: Creates a comment on a video
      security:
        - Bearer: []
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateVideoCommentRequest'
      responses:
        '200':
          description: The created comment
          schema:
            $ref: '#/definitions/VideoComment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Product & Video
      operationId: getVideoComments
      summary: Retrieves a list of all comments on a specific video
      description: Loads all comments of a video
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: The video comments
          schema:
            type: array
            items:
              $ref: '#/definitions/VideoComment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}/comments/{commentId}':
    x-swagger-router-controller: videoCommentsController
    get:
      tags:
        - Product & Video
      operationId: getVideoComment
      summary: Retrieves a specific comment on a specific video
      description: Loads a video comment
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: commentId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: The video comment
          schema:
            $ref: '#/definitions/VideoComment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Product & Video
      operationId: deleteVideoComment
      summary: Deletes a specific comment on a specific video
      description: Deletes a video comment
      security:
        - Bearer: []
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: commentId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/{videoId}/comments/{commentId}/objection':
    x-swagger-router-controller: videoCommentsController
    post:
      tags:
        - Product & Video
      operationId: flagVideoComment
      summary: Creates an objection on a specific comment on a specific video
      description: Flags a comment to be reviewed
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: commentId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Product & Video
      operationId: unflagVideoComment
      summary: Remove an objection on a specific comment on a specific video
      description: Unflags a comment
      parameters:
        - name: videoId
          in: path
          type: string
          required: true
        - name: commentId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /videos/comments/objections:
    x-swagger-router-controller: videoCommentsController
    get:
      tags:
        - Product & Video
      operationId: getFlaggedComments
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Retrieves a list of all videos comments that have been objected
      description: Loads all flagged video comments
      parameters:
        - $ref: '#/parameters/queryPageSize'
        - $ref: '#/parameters/queryPageNumber'
      responses:
        '200':
          description: The flagged video comments
          schema:
            type: array
            items:
              $ref: '#/definitions/VideoComment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/videos/comments/objections/{commentId}':
    x-swagger-router-controller: videoCommentsController
    get:
      tags:
        - Product & Video
      operationId: getFlaggedCommentDetails
      security:
        - Bearer: []
      x-yeay-scope: admin
      summary: Retrieves details for an objected video comment
      description: Loads a specific flagged video comment
      parameters:
        - name: commentId
          type: string
          in: path
          required: true
      responses:
        '200':
          description: The flagged video comment
          schema:
            type: object
            properties:
              comment:
                $ref: '#/definitions/VideoComment'
              previousComments:
                type: array
                items:
                  $ref: '#/definitions/VideoComment'
              nextComments:
                type: array
                items:
                  $ref: '#/definitions/VideoComment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wishlist:
    x-swagger-router-controller: wishlistController
    get:
      tags:
        - Wishlist
      operationId: fetchWishlist
      summary: Retrieves the wishlist of the requesting user
      description: Retrieves the wishlist of the requesting user
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
      responses:
        '200':
          description: The wishlist has been retrieved successfully.
          schema:
            $ref: '#/definitions/Wishlist'
        '403':
          description: Authentication failed due to missing or invalid bearer token.
          schema:
            $ref: '#/definitions/InvalidAuthError'
        '500':
          description: Oops.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wishlist/videos:
    x-swagger-router-controller: wishlistController
    get:
      deprecated: true
      tags:
        - Deprecated
      operationId: getWishlistVideos
      description: >
        **DEPRECATED**: Please use `GET /v2/catalog/videos` with `ids` filter to
        retrieve videos


        Retrieves the paginated list of videos in the requesting user's
        wishlist.
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
        - $ref: '#/parameters/queryCurrency'
        - $ref: '#/parameters/queryPaginationOffset'
        - $ref: '#/parameters/queryPaginationLimit'
      responses:
        '200':
          description: The wishlist has been retrieved successfully.
          schema:
            allOf:
              - $ref: '#/definitions/PaginatedList'
              - properties:
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/Video'
                required:
                  - items
  '/wishlist/videos/{videoId}':
    x-swagger-router-controller: wishlistController
    parameters:
      - name: videoId
        type: string
        required: true
        in: path
    put:
      tags:
        - Wishlist
      operationId: addVideoToWishlist
      summary: Adds a video to the requesting user's wishlist
      description: Adds a video to the requesting user's wishlist
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
      responses:
        '204':
          description: The video has been put to the wishlist.
        '404':
          description: No such video found for the given id.
    delete:
      tags:
        - Wishlist
      operationId: removeVideoFromWishlist
      summary: Remove a video from the requesting user's wishlist
      description: Remove a video from the requesting user's wishlist
      security:
        - Bearer: []
      x-yeay-scope: user
      parameters:
        - $ref: '#/parameters/headerAsUser'
      responses:
        '204':
          description: The video has been successfully removed from the wishlist.
        '404':
          description: No such video found for the given id.
parameters:
  dtDraw:
    description: Datatables draw counter
    name: draw
    type: number
    in: query
  dtStart:
    description: Datatables start
    name: start
    type: number
    in: query
  dtLength:
    description: Datatables length
    name: length
    type: number
    in: query
  dtOrder:
    description: Datatables order
    name: order
    type: string
    in: query
  dtColumns:
    description: Datatables columns
    name: columns
    type: array
    in: query
    items:
      type: string
  dtSearch:
    description: Datatables search
    name: search
    type: string
    in: query
  dtCategory:
    description: Datatables product category
    name: category
    type: string
    in: query
  headerAsUser:
    name: X-YEAY-AS-USER
    in: header
    description: Perform the request in the name of the user with this user id
    type: string
  headerLanguage:
    name: Accept-Language
    in: header
    description: Language of the calling entity
    type: string
  headerYeayClientVersion:
    name: X-YEAY-CLIENT-VERSION
    in: header
    type: string
    description: >-
      Should follow semantic versioning pattern. If it does not then the version
      is considered 'latest' and will be treated as such.
  headerYeayClientName:
    name: X-YEAY-CLIENT-NAME
    in: header
    type: string
    description: >-
      Specifies requesting client name. Supported values are `android`, `ios`,
      `portal`, `shop` and `legacy`.
  queryPageSize:
    name: pageSize
    in: query
    description: Maximum list size
    type: integer
    default: 100
    minimum: 1
    maximum: 1000
  queryPageOffset:
    name: pageOffset
    in: query
    description: Offset from the beginning of the
    type: integer
    default: 0
    minimum: 0
  queryPageNumber:
    name: pageNumber
    in: query
    description: Current chunk position
    type: integer
    default: 1
    minimum: 1
  queryPaginationOffset:
    name: offset
    in: query
    description: Retrieve paginated items starting at this offset.
    type: integer
    default: 0
    minimum: 0
  queryPaginationLimit:
    name: limit
    in: query
    description: Maximum items in pagination list.
    type: integer
    default: 20
    minimum: 0
    maximum: 100
  queryFilter:
    name: filter
    in: query
    description: >
      Specify filters in the form of `&filter={propertyName}:{value}`. E.g.
      `&filter=id:12345`. Can be added more than once to filter for multiple
      fields like so `&filter=status:open&filter=userId:12345`. To create "or"
      filters you can specify more than one value for a filter like so
      `&filter=userId:iddqd|idkfa`
    type: array
    items:
      type: string
  queryCountry:
    name: country
    in: query
    description: |
      ISO alpha2 code, e.g. `DE` or `US`
    type: string
  queryCurrency:
    name: currency
    in: query
    type: string
    description: |
      3-letter currency code, e.g. `USD` or `EUR`
  queryPaymentType:
    name: type
    in: query
    type: string
    required: true
    description: >
      Specify what kind of payment gateway is being used. Only stripe is
      currently supported
  queryGender:
    name: gender
    in: query
    type: string
    description: >
      Preferred gender for personalized content. For now `male` and `female` are
      supported. All

      other values will be ignored.
definitions:
  Address:
    properties:
      administrativeArea:
        type: string
      country:
        type: string
        description: 'Deprecated, use `isoCountryCode` instead.'
      formattedAddressLines:
        type: string
        description: 'Read-only, pretty printed string of the address'
      locality:
        type: string
      thoroughfare:
        type: string
      postalCode:
        type: string
      name:
        type: string
      suite:
        type: string
      isoCountryCode:
        type: string
  AffiliateProduct:
    type: object
    properties:
      id:
        type: string
      network:
        type: string
      advertisingId:
        type: string
      link:
        type: string
      networkProductId:
        type: string
      name:
        type: string
      description:
        type: string
      isInStock:
        type: boolean
      imageUrl:
        type: string
      isActive:
        type: boolean
      createdAt:
        type: string
        format: date-time
      globalProductIds:
        type: object
        items:
          type: string
      price:
        type: object
        properties:
          value:
            type: number
          currency:
            type: string
  AffiliateProductList:
    allOf:
      - $ref: '#/definitions/PaginatedList'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/AffiliateProduct'
        required:
          - items
  AltImageObject:
    type: object
    properties:
      s:
        type: string
      m:
        type: string
      l:
        type: string
      xl:
        type: string
  AppSetting:
    properties:
      videoLimit:
        type: number
      videoServerRegion:
        type: string
      videoServerPrefix:
        type: string
      videoServerBucket:
        type: string
      updatedAt:
        type: string
      iOSAppStoreVersion:
        type: string
      androidPlayStoreVersion:
        type: string
      acceptedCurrencies:
        type: object
      serverTimeEpoch:
        type: number
      serverTime:
        type: string
  AppStatus:
    required:
      - ok
    properties:
      ok:
        type: boolean
      reason:
        type: string
        enum:
          - UNSUPPORTED_CLIENT_VERSION
      message:
        type: string
  CancelOrderRequest:
    properties:
      reason:
        type: string
        enum:
          - DID_NOT_ORDER
          - TOO_EXPENSIVE
          - DO_NOT_NEED
          - INCORRECT_SIZE
    required:
      - reason
  CatalogChallengeListItem:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      challengeCode:
        type: string
      isEnabled:
        type: boolean
      rank:
        type: integer
      imageUrl:
        type: string
      brandLogoUrl:
        type: string
      brandName:
        type: string
      terms:
        type: string
        description: The participation terms of the challenge.
      learnMore:
        type: string
        description: Additional text to learn more about the challenge.
      commissionAmount:
        type: integer
        description: Commission amount in cents
      commissionCurrency:
        type: string
        pattern: '[A-Z]'
        minLength: 3
        maxLength: 3
      associatedProducts:
        type: array
        items:
          $ref: '#/definitions/Product'
      participationRequirements:
        type: array
        items:
          type: string
          enum:
            - ENTER_CODE
            - PURCHASE_CHALLENGE_PRODUCT
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      canParticipate:
        type: boolean
        description: >
          Indicator that states whether the requesting user meets all
          requirements in order to paticipate in this challenge.
  CatalogChannel:
    properties:
      id:
        type: string
      name:
        type: string
      ranking:
        type: number
  CatalogCollection:
    properties:
      id:
        type: string
      name:
        type: string
      imageUrl:
        type: string
      beginsAt:
        type: string
      endsAt:
        type: string
      description:
        type: string
      shareUrl:
        type: string
      products:
        description: >
          **Deprecated**: supporting clients should rely on `videos`
          exclusively.
        type: array
        items:
          $ref: '#/definitions/CatalogProduct'
      videoIds:
        type: array
        items:
          type: string
  CatalogCollectionListItem:
    properties:
      id:
        type: string
      name:
        type: string
      imageUrl:
        type: string
      beginsAt:
        type: string
      endsAt:
        type: string
      description:
        type: string
      productIds:
        description: >
          **Deprecated**: supporting clients should rely on `videoIds`
          exclusively.
        type: array
        items:
          type: string
      videoIds:
        description: List of video ids assigned to the collection.
        type: array
        items:
          type: string
  CatalogDiscoverContent:
    properties:
      schema:
        type: array
        items:
          type: object
          properties:
            title:
              type: string
            type:
              type: string
            slug:
              type: string
      collections:
        type: array
        items:
          $ref: '#/definitions/CatalogCollectionListItem'
      trending-videos:
        type: array
        items:
          $ref: '#/definitions/CatalogVideoDetails'
      trending-people:
        type: array
        items:
          $ref: '#/definitions/CatalogSellerDetails'
      new-videos:
        type: array
        items:
          $ref: '#/definitions/CatalogVideoDetails'
      near-you:
        type: array
        items:
          $ref: '#/definitions/CatalogVideoDetails'
      top-sellers-near-you:
        type: array
        items:
          $ref: '#/definitions/CatalogSellerDetails'
      on-fire:
        type: array
        items:
          $ref: '#/definitions/CatalogVideoDetails'
      my-wishlist:
        $ref: '#/definitions/LegacyWishlist'
      featured-challenge:
        $ref: '#/definitions/Challenge'
  DiscoveryStreamItem:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum:
          - collection
          - challenge
          - videoFeed
          - userFeed
      title:
        type: string
      imageUrl:
        type: string
    required:
      - id
      - type
      - title
  CatalogFeaturedSeller:
    allOf:
      - $ref: '#/definitions/CatalogSeller'
      - properties:
          numOfFollowers:
            type: number
  CatalogFeaturedSellerList:
    type: array
    items:
      $ref: '#/definitions/CatalogFeaturedSeller'
  CatalogHomeFeedVideo:
    properties:
      id:
        type: string
      title:
        type: string
      mediaUrl:
        type: string
      sourceMediaUrl:
        type: string
      socialVideoUrl:
        type: string
      previewUrl:
        type: string
      posterImageUrl:
        type: string
      squareVideoUrl:
        type: string
      altMediaUrl:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      numOfLikes:
        type: integer
      numOfViews:
        type: integer
      numOfComments:
        type: integer
      product:
        properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          price:
            type: number
          altProductImages:
            type: object
          currency:
            type: string
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          yeayScorePrice:
            description: The product price in yeay score points.
            type: integer
            format: int32
            minimum: 0
          yeayScorePurchasability:
            type: string
            description: >-
              If the request is authenticated, this field describes if the
              authenticated user is able to purchase the product with yeayScore.
            enum:
              - unavailable
              - insufficient_balance
              - purchasable
          affiliateLink:
            type: string
          affiliateName:
            type: string
      creator:
        properties:
          id:
            type: string
          firstname:
            type: string
          lastname:
            type: string
          username:
            type: string
          avatarImageUrl:
            type: string
          altAvatarImages:
            type: object
          shareUrl:
            type: string
          isFollowed:
            type: boolean
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          isVerifiedByYeay:
            type: boolean
          numOfFollowings:
            type: integer
          numOfFollowers:
            type: integer
  CatalogProduct:
    properties:
      id:
        type: string
      name:
        type: string
      channels:
        type: array
        items:
          $ref: '#/definitions/CatalogChannel'
      description:
        type: string
      price:
        type: number
      yeayScorePrice:
        description: The product price in yeay score points.
        type: integer
        format: int32
        minimum: 0
      shippingPrice:
        type: number
      intlShippingPrice:
        type: number
      productImageUrl:
        type: string
      altProductImages:
        type: object
      currency:
        type: string
      originCountry:
        type: string
      shipsInternational:
        type: boolean
      quantity:
        type: number
      productOptions:
        type: object
      shareUrl:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      video:
        $ref: '#/definitions/CatalogProductVideo'
      seller:
        $ref: '#/definitions/CatalogSeller'
      geoLocationCoordinate:
        type: object
        properties:
          lat:
            type: number
          lon:
            type: number
      isLocalPickupEnabled:
        type: boolean
      isShippingDisabled:
        type: boolean
      purchaseStatus:
        $ref: '#/definitions/productPurchaseStatus'
      affiliateLink:
        type: string
      affiliateName:
        type: string
  CatalogProductVideo:
    properties:
      id:
        type: string
      mediaUrl:
        type: string
      sourceMediaUrl:
        type: string
      altMediaUrl:
        type: string
      creator:
        $ref: '#/definitions/CatalogSeller'
  CatalogSeller:
    properties:
      id:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      userName:
        type: string
      username:
        type: string
      profileKey:
        type: string
      avatarImageUrl:
        type: string
      altAvatarImages:
        type: object
      splashImageUrl:
        type: string
      shipToAddress:
        $ref: '#/definitions/Address'
      phoneNumber:
        type: string
      profileBio:
        type: string
      sellerRating:
        type: number
      totalReviews:
        type: number
      paypalEmail:
        type: string
      shareUrl:
        type: string
      allowsChat:
        type: boolean
      isFollowed:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      appUserType:
        type: string
        enum:
          - regular
          - influencer
          - retailer
          - brand
      isVerifiedByYeay:
        type: boolean
  CatalogSellerDetails:
    allOf:
      - $ref: '#/definitions/CatalogSeller'
      - properties:
          numOfLikes:
            type: number
          numOfFollowers:
            type: number
          numOfFollowing:
            type: number
          allowsChat:
            type: boolean
          averageRating:
            type: number
            description: Avarage rating of seller basend on recent orders.
            minimum: 1
            maximum: 5
          numOfRatings:
            type: integer
            description: Total number of ratings.
  CatalogUserSearchResult:
    type: array
    items:
      $ref: '#/definitions/CatalogSellerDetails'
  CatalogVideo:
    properties:
      id:
        type: string
      title:
        type: string
      shareUrl:
        type: string
      mediaUrl:
        type: string
      altMediaUrl:
        type: string
      sourceMediaUrl:
        type: string
      socialVideoUrl:
        type: string
      previewUrl:
        type: string
      altPreviewUrl:
        type: string
      sharingImageUrl:
        type: string
      squareVideoUrl:
        type: string
      posterImageUrl:
        type: string
      converted:
        type: boolean
      videoFormat:
        type: string
      ranking:
        type: number
      approved:
        type: boolean
      featured:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      categories:
        type: array
        items:
          $ref: '#/definitions/CatalogChannel'
      numOfLikes:
        type: number
      numOfRecentLikes:
        type: number
      numOfViews:
        type: number
      numOfRecentViews:
        type: number
      numOfComments:
        type: number
      numOfRecentComments:
        type: number
      product:
        $ref: '#/definitions/CatalogVideoProduct'
      creator:
        $ref: '#/definitions/CatalogSeller'
      seller:
        $ref: '#/definitions/CatalogSeller'
      challengeId:
        type: string
  CatalogVideoDetails:
    allOf:
      - $ref: '#/definitions/CatalogVideo'
      - properties:
          seller:
            $ref: '#/definitions/CatalogSellerDetails'
  CatalogVideoProduct:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      price:
        type: number
      yeayScorePrice:
        description: The product price in yeay score points.
        type: integer
        format: int32
        minimum: 0
      shippingPrice:
        type: number
      intlShippingPrice:
        type: number
      productImageUrl:
        type: string
      currency:
        type: string
      originCountry:
        type: string
      shipsInternational:
        type: boolean
      quantity:
        type: number
      productOptions:
        type: object
      condition:
        type: string
      shareUrl:
        type: string
      size:
        type: string
      gender:
        type: string
      color:
        type: string
      material:
        type: string
      brand:
        type: string
      pattern:
        type: string
      googleProductCategory:
        type: number
      shipping:
        type: object
        properties:
          weight:
            type: number
          length:
            type: number
          width:
            type: number
          height:
            type: number
      regularPrice:
        type: number
      taxes:
        type: number
      totalSales:
        type: number
      sellerPaysShipping:
        type: boolean
      geoLocationCoordinate:
        type: object
        properties:
          lat:
            type: number
          lon:
            type: number
      isLocalPickupEnabled:
        type: boolean
      isShippingDisabled:
        type: boolean
      seller:
        $ref: '#/definitions/CatalogSeller'
      purchaseStatus:
        $ref: '#/definitions/productPurchaseStatus'
      affiliateLink:
        type: string
      affiliateName:
        type: string
      yeayScorePurchasability:
        type: string
        description: >-
          If the request is authenticated, this field describes if the
          authenticated user is able to purchase the product with yeayScore.
        enum:
          - unavailable
          - insufficient_balance
          - purchasable
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  CatalogVideoSearchResult:
    type: array
    items:
      $ref: '#/definitions/CatalogVideo'
  Challenge:
    required:
      - id
      - name
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      challengeCode:
        type: string
      isEnabled:
        type: boolean
      rank:
        type: integer
      imageUrl:
        type: string
      brandLogoUrl:
        type: string
      brandName:
        type: string
      terms:
        type: string
        description: The participation terms of the challenge.
      orderNote:
        type: string
        description: The orderNote is included in challangen order confirmation emails.
      learnMore:
        type: string
        description: Additional text to learn more about the challenge.
      commissionAmount:
        type: integer
        description: Commission amount in cents
      commissionCurrency:
        type: string
        pattern: '[A-Z]'
        minLength: 3
        maxLength: 3
      associatedProducts:
        type: array
        items:
          $ref: '#/definitions/Product'
      participationRequirements:
        type: array
        items:
          type: string
          enum:
            - ENTER_CODE
            - PURCHASE_CHALLENGE_PRODUCT
      featuredVideoIds:
        type: array
        items:
          type: string
        description: >-
          Ordered list of video IDs that will be shown in top of the list of
          challenge videos
      translations:
        $ref: '#/definitions/ChallengeTranslations'
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  ChallengeTranslationPayload:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      orderNote:
        type: string
      terms:
        type: string
      learnMore:
        type: string
  ChallengeTranslations:
    properties:
      zh-CN:
        $ref: '#/definitions/ChallengeTranslationPayload'
      ja:
        $ref: '#/definitions/ChallengeTranslationPayload'
      fr:
        $ref: '#/definitions/ChallengeTranslationPayload'
      de:
        $ref: '#/definitions/ChallengeTranslationPayload'
      ko:
        $ref: '#/definitions/ChallengeTranslationPayload'
      it:
        $ref: '#/definitions/ChallengeTranslationPayload'
      ru:
        $ref: '#/definitions/ChallengeTranslationPayload'
      nl:
        $ref: '#/definitions/ChallengeTranslationPayload'
      tr:
        $ref: '#/definitions/ChallengeTranslationPayload'
      pl:
        $ref: '#/definitions/ChallengeTranslationPayload'
      sv:
        $ref: '#/definitions/ChallengeTranslationPayload'
      fi:
        $ref: '#/definitions/ChallengeTranslationPayload'
      el:
        $ref: '#/definitions/ChallengeTranslationPayload'
      da:
        $ref: '#/definitions/ChallengeTranslationPayload'
      id:
        $ref: '#/definitions/ChallengeTranslationPayload'
      th:
        $ref: '#/definitions/ChallengeTranslationPayload'
      pt-BR:
        $ref: '#/definitions/ChallengeTranslationPayload'
      nb:
        $ref: '#/definitions/ChallengeTranslationPayload'
      es:
        $ref: '#/definitions/ChallengeTranslationPayload'
      es-MX:
        $ref: '#/definitions/ChallengeTranslationPayload'
      pt:
        $ref: '#/definitions/ChallengeTranslationPayload'
  Channel:
    required:
      - id
      - name
    properties:
      id:
        type: string
      name:
        type: string
      imageUrl:
        type: string
      approved:
        type: boolean
      ranking:
        type: number
      createdAt:
        type: string
      updatedAt:
        type: string
  Chat:
    properties:
      id:
        type: string
      buyer:
        $ref: '#/definitions/User'
      seller:
        $ref: '#/definitions/User'
      videoId:
        type: string
      slug:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      lastMessage:
        type: string
      lastMessageSentAt:
        type: string
      locale:
        type: string
  Collection:
    required:
      - id
      - name
    properties:
      id:
        type: string
      name:
        type: string
      imageUrl:
        type: string
      videoUrl:
        type: string
      approved:
        type: boolean
      beginsAt:
        type: string
      endsAt:
        type: string
      isFeatured:
        type: boolean
      createdAt:
        type: string
      updatedAt:
        type: string
      description:
        type: string
      videos:
        type: array
        items:
          type: string
      personalizationAttributes:
        description: Attributes that affect personalization behaviour of collections.
        type: object
        properties:
          gender:
            type: array
            items:
              type: string
              enum:
                - male
                - female
      translations:
        $ref: '#/definitions/CollectionTranslations'
  CollectionTranslationPayload:
    type: object
    required:
      - name
      - description
    properties:
      name:
        type: string
      description:
        type: string
  CollectionTranslations:
    properties:
      zh-CN:
        $ref: '#/definitions/CollectionTranslationPayload'
      ja:
        $ref: '#/definitions/CollectionTranslationPayload'
      fr:
        $ref: '#/definitions/CollectionTranslationPayload'
      de:
        $ref: '#/definitions/CollectionTranslationPayload'
      ko:
        $ref: '#/definitions/CollectionTranslationPayload'
      it:
        $ref: '#/definitions/CollectionTranslationPayload'
      ru:
        $ref: '#/definitions/CollectionTranslationPayload'
      nl:
        $ref: '#/definitions/CollectionTranslationPayload'
      tr:
        $ref: '#/definitions/CollectionTranslationPayload'
      pl:
        $ref: '#/definitions/CollectionTranslationPayload'
      sv:
        $ref: '#/definitions/CollectionTranslationPayload'
      fi:
        $ref: '#/definitions/CollectionTranslationPayload'
      el:
        $ref: '#/definitions/CollectionTranslationPayload'
      da:
        $ref: '#/definitions/CollectionTranslationPayload'
      id:
        $ref: '#/definitions/CollectionTranslationPayload'
      th:
        $ref: '#/definitions/CollectionTranslationPayload'
      pt-BR:
        $ref: '#/definitions/CollectionTranslationPayload'
      nb:
        $ref: '#/definitions/CollectionTranslationPayload'
      es:
        $ref: '#/definitions/CollectionTranslationPayload'
      es-MX:
        $ref: '#/definitions/CollectionTranslationPayload'
      pt:
        $ref: '#/definitions/CollectionTranslationPayload'
  CreateChallengeRequest:
    required:
      - name
    properties:
      name:
        type: string
      description:
        type: string
      challengeCode:
        type: string
      isEnabled:
        type: boolean
      rank:
        type: integer
      brandName:
        type: string
      terms:
        type: string
        description: The participation terms of the challenge.
      orderNote:
        type: string
        description: The orderNote is included in challangen order confirmation emails.
      learnMore:
        type: string
        description: Additional text to learn more about the challenge.
      commissionAmount:
        type: integer
        description: Commission amount in cents
      commissionCurrency:
        type: string
        pattern: '[A-Z]'
        minLength: 3
        maxLength: 3
      associatedProducts:
        type: array
        items:
          type: string
      participationRequirements:
        type: array
        items:
          type: string
          enum:
            - ENTER_CODE
            - PURCHASE_CHALLENGE_PRODUCT
      featuredVideoIds:
        type: array
        items:
          type: string
        description: >-
          Ordered list of video IDs that will be shown in top of the list of
          challenge videos
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
  CreateChannelRequest:
    required:
      - name
    properties:
      name:
        type: string
      imageUrl:
        type: string
      approved:
        type: boolean
      ranking:
        type: number
  CreateChatRequest:
    properties:
      sellerId:
        type: string
      videoId:
        type: string
      locale:
        type: string
    required:
      - sellerId
      - locale
  CreateCollectionRequest:
    required:
      - name
      - videos
    properties:
      name:
        type: string
      approved:
        type: boolean
      beginsAt:
        type: string
      endsAt:
        type: string
      description:
        type: string
      isFeatured:
        type: boolean
      videos:
        type: array
        items:
          type: string
      ordering:
        type: number
      personalizationAttributes:
        description: Attributes that affect personalization behaviour of collections.
        type: object
        properties:
          gender:
            type: array
            items:
              type: string
              enum:
                - male
                - female
  CreateDeviceRequest:
    properties:
      deviceToken:
        type: string
      pushToken:
        type: string
      deviceOS:
        type: string
      deviceModel:
        type: string
      topics:
        type: array
        items:
          type: string
      deviceLocale:
        type: string
      advertisingId:
        type: string
    required:
      - deviceToken
  CreateFeaturedTagRequest:
    properties:
      name:
        type: string
      isHero:
        type: boolean
      ordering:
        type: number
    required:
      - name
  CreateLegacyWishlistRequest:
    properties:
      products:
        type: array
        items:
          type: string
  CreateOrUpdateAffiliateProductRequest:
    type: object
    properties:
      name:
        type: string
      link:
        type: string
      price:
        type: number
      currency:
        type: string
      advertiserId:
        type: string
      brand:
        type: string
    required:
      - name
      - link
      - price
      - currency
  CreateOrderRequest:
    properties:
      productId:
        type: string
      videoId:
        type: string
        description: >
          This field has to be set when it is important to determine which video
          triggered the sale

          (e.g. in challenges)
      shipTo:
        type: object
      buyerId:
        type: string
      optionId:
        type: string
    required:
      - productId
  CreateProductRequest:
    properties:
      name:
        type: string
      description:
        type: string
      isOnline:
        description: Determines if a product and its videos are publically accessible.
        type: boolean
        default: true
      price:
        type: number
        description: |
          **OBSOLETE** Products don't have customer provided price anymore.
      currency:
        type: string
        description: |
          **OBSOLETE** Products don't have customer provided currency anymore.
      yeayScorePrice:
        description: The product price in yeay score points. _(admin only)_
        type: integer
        format: int32
        minimum: 0
      size:
        type: string
      gender:
        type: string
      color:
        type: string
      material:
        type: string
      brand:
        type: string
      pattern:
        type: string
      sellerId:
        type: string
        description: |
          Optional. If not set the product is assigned to the requesting user.
          Can only be set by users with scope 'admin'.
      adminTags:
        type: array
        items:
          type: string
        description: Can only be set by users with scope 'admin'.
      googleProductCategory:
        type: number
        description: Can only be set by users with scope 'admin'.
      yeay:
        type: boolean
        description: Can only be set by users with scope 'admin'.
      purchaseStatus:
        allOf:
          - $ref: '#/definitions/productPurchaseStatus'
          - default: available
      affiliateLink:
        type: string
      affiliateName:
        type: string
    required:
      - name
      - description
  CreateSellerReviewRequest:
    type: object
    required:
      - orderId
      - rating
    properties:
      orderId:
        type: string
      rating:
        type: integer
        description: 'Rating as int value from 1 to 5 (1 = bad, 5 = good).'
        minimum: 1
        maximum: 5
      privateReview:
        type: string
        description: Private review of seller. Only YEAY will see this.
      negativeRatingReason:
        $ref: '#/definitions/sellerReviewNegativeRatingReason'
  CreateVideoCommentRequest:
    type: object
    properties:
      comment:
        type: string
    required:
      - comment
  CreateVideoRequest:
    properties:
      creatorId:
        type: string
        description: Optional. If not set the video is assigned to the requesting user
      productId:
        $ref: '#/definitions/IdOrNull'
      videoTitle:
        type: string
        description: Title of video
      videoType:
        $ref: '#/definitions/videoType'
      website:
        type: string
      affiliateProductIds:
        description: Only available in admin context
        type: array
        items:
          type: string
      challengeId:
        description: >
          An optional challenge reference. **NOTE**: if the given challenge is
          invalid or not compatible with the product the request will fail with
          a `409 - Conflict`.
        type: string
      channels:
        type: array
        items:
          type: string
      adminTags:
        type: array
        items:
          type: string
        description: Can only be set by users with scope 'admin'.
      yeay:
        type: boolean
      generalFeedVisibility:
        $ref: '#/definitions/videoGeneralFeedVisibility'
      specificFeedVisibilities:
        $ref: '#/definitions/videoSpecificFeedVisibilities'
      isOnline:
        description: Determines if a video is publically accessible.
        type: boolean
        default: true
    required:
      - videoTitle
      - videoType
  DataTableAffiliateProductsResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              properties:
                id:
                  type: string
                network:
                  type: string
                advertiserId:
                  type: string
                link:
                  type: string
                brand:
                  type: string
                name:
                  type: string
                price:
                  type: object
                  properties:
                    value:
                      type: number
                    currency:
                      type: string
                isInStock:
                  type: boolean
                imageUrl:
                  type: string
  DataTableDisapprovedVideosResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              allOf:
                - $ref: '#/definitions/Video'
                - properties:
                    disapprovalReason:
                      type: string
                    disapprovalDate:
                      type: string
  DataTableFeaturedSeller:
    type: object
    properties:
      userId:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      isFeatured:
        type: boolean
      ranking:
        type: number
      numOfProducts:
        type: number
      createdAt:
        type: string
      updatedAt:
        type: string
  DataTableFeaturedSellersResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/DataTableFeaturedSeller'
  DataTableFeaturedVideo:
    type: object
    properties:
      videoId:
        type: string
      productId:
        type: string
      creatorId:
        type: string
      creator:
        $ref: '#/definitions/User'
      isFeatured:
        type: boolean
      imageUrl:
        type: string
      productName:
        type: string
      creatorName:
        type: string
      price:
        type: number
      currency:
        type: string
      numOfViews:
        type: number
      numOfSales:
        type: number
      numOfLikes:
        type: number
      ranking:
        type: number
      createdAt:
        type: string
      updatedAt:
        type: string
  DataTableFeaturedVideosResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/DataTableFeaturedVideo'
  DataTableGenericResponse:
    type: object
    properties:
      draw:
        type: number
      recordsTotal:
        type: number
      recordsFiltered:
        type: number
      error:
        type: string
  DataTableOrdersResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/Order'
  DataTableProductsResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/Product'
  DataTableUsersResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/User'
  DataTableVideosResponse:
    allOf:
      - $ref: '#/definitions/DataTableGenericResponse'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/Video'
  Device:
    properties:
      id:
        type: string
      deviceToken:
        type: string
      deviceOS:
        type: string
      pushToken:
        type: string
      userId:
        type: string
      deviceModel:
        type: string
      topics:
        type: array
        items:
          type: string
      deviceLocale:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
      code:
        type: string
  InvalidAuthError:
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: string
    example:
      message: Authentication field is invalid
      code: INVALID_AUTH
  FeaturedTag:
    properties:
      id:
        type: string
      name:
        type: string
      imageUrl:
        type: string
      isHero:
        type: boolean
      ordering:
        type: number
      createdAt:
        type: string
      updatedAt:
        type: string
  Follow:
    properties:
      id:
        type: string
      followerId:
        type: string
      followedObject:
        type: object
      synched:
        type: boolean
      createdAt:
        type: string
      updatedAt:
        type: string
  GuestCheckoutOrderResponse:
    allOf:
      - $ref: '#/definitions/Order'
      - properties:
          key:
            type: string
            description: Unique identifier for this order
  IdOrNull:
    type:
      - string
      - 'null'
    description: |
      The id can be:
        - non empty string - value will be evaluated as id
        - empty string - value will be ignored, default will be used (legacy behaviour)
        - null - property will be explicitly empty, this may unset a property
  ImageUploadResponse:
    properties:
      url:
        type: string
  LegacyWishlist:
    properties:
      id:
        type: string
      userId:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      count:
        type: number
      products:
        type: array
        items:
          type: object
  Like:
    properties:
      id:
        type: string
      userId:
        type: string
      videoId:
        type: string
      type:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  MetricDayEntry:
    properties:
      day:
        type: string
      value:
        type: number
  Metrics:
    properties:
      numOfTotalOrders:
        type: number
      numOfOrders:
        type: array
        items:
          $ref: '#/definitions/MetricDayEntry'
      numOfTotalProducts:
        type: number
      numOfProducts:
        type: array
        items:
          $ref: '#/definitions/MetricDayEntry'
      numOfTotalLikes:
        type: number
      numOfLikes:
        type: array
        items:
          $ref: '#/definitions/MetricDayEntry'
      numOfTotalFollows:
        type: number
      numOfFollows:
        type: array
        items:
          $ref: '#/definitions/MetricDayEntry'
  Notification:
    properties:
      id:
        type: string
      message:
        type: string
      properties:
        type: object
      createdAt:
        type: string
  Order:
    properties:
      id:
        type: string
      orderNumber:
        type: string
      status:
        type: string
      prettyPrice:
        type: string
      finalPrice:
        type: number
      unitPrice:
        type: number
      quantity:
        type: number
      shippingPrice:
        type: number
      currency:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      shippedAt:
        type: string
      trackingNumber:
        type: string
      trackingService:
        type: string
      optionRequested:
        type: string
        description: A pretty plain-text name of the variant purchased.
      paypalEmail:
        type: string
        description: The paypal email of the seller assoc with this order.
      challengeDetails:
        type: object
      videoId:
        type: string
        properties:
          id:
            type: string
          name:
            type: string
          commissionAmount:
            type: number
          commissionCurrency:
            type: string
          videoCreatorId:
            type: string
      product:
        $ref: '#/definitions/Product'
      seller:
        $ref: '#/definitions/User'
      buyer:
        $ref: '#/definitions/User'
  OrderDetails:
    allOf:
      - $ref: '#/definitions/Order'
      - properties:
          payment:
            type: object
            properties:
              provider:
                type: string
              transactionId:
                type: string
              paidAt:
                type: string
          reviews:
            type: object
            required:
              - fromBuyer
            properties:
              fromBuyer:
                type: object
                required:
                  - isSubmitted
                  - isSubmissionPossible
                properties:
                  isSubmitted:
                    type: boolean
                  isSubmissionPossible:
                    type: boolean
                  rating:
                    type: integer
                    minimum: 1
                    maximum: 5
  PaginatedList:
    type: object
    properties:
      total:
        description: Absolute number of items available.
        type: integer
      count:
        description: Number of items in the list.
        type: integer
      offset:
        description: Current offset from beginning of the total result set.
        type: integer
      limit:
        description: Maximum list size.
        type: integer
      items:
        description: The result list of entities.
        type: array
        items:
          type: object
    required:
      - total
      - count
      - offset
      - limit
      - items
  PaymentAccount:
    properties:
      id:
        type: string
      prettyIdentifier:
        type: string
      gatewayUserId:
        type: string
      userId:
        type: string
      gatewayId:
        type: string
      token:
        type: string
      valid:
        type: boolean
      createdAt:
        type: string
      updatedAt:
        type: string
  Product:
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      sellerId:
        type: string
      price:
        type: number
      yeayScorePrice:
        description: The product price in yeay score points.
        type: integer
        format: int32
        minimum: 0
      shippingPrice:
        type: number
      intlShippingPrice:
        type: number
      productImageUrl:
        type: string
      currency:
        type: string
      originCountry:
        type: string
      shipsInternational:
        type: boolean
      quantity:
        type: number
      productOptions:
        type: object
      totalSales:
        type: number
      seller:
        $ref: '#/definitions/User'
      sellerName:
        type: string
      yeay:
        type: boolean
      condition:
        type: string
      adminTags:
        type: array
        items:
          type: string
      size:
        type: string
      gender:
        type: string
      color:
        type: string
      material:
        type: string
      brand:
        type: string
      pattern:
        type: string
      googleProductCategory:
        type: number
      shippping:
        $ref: '#/definitions/ShippingInfo'
      createdAt:
        type: string
      updatedAt:
        type: string
      video:
        $ref: '#/definitions/Video'
      altProductImages:
        type: object
      geoLocationCoordinate:
        type: object
        properties:
          lat:
            type: number
          lon:
            type: number
      isLocalPickupEnabled:
        type: boolean
      isShippingDisabled:
        type: boolean
      isOnline:
        description: Determines if a product and its videos are publically accessible.
        type: boolean
      purchaseStatus:
        $ref: '#/definitions/productPurchaseStatus'
      affiliateLink:
        type: string
      affiliateName:
        type: string
  PurchaseRequest:
    required:
      - id
      - userId
      - productId
      - address
    properties:
      id:
        type: string
      userId:
        type: string
      userYeayScore:
        type: number
      productId:
        type: string
      productYeayScorePrice:
        type: number
      videoId:
        type: string
      email:
        type: string
      phoneNumber:
        type: string
      address:
        $ref: '#/definitions/Address'
  SalesVideoCommissionDetailsVideo:
    properties:
      id:
        type: string
      title:
        type: string
      previewUrl:
        type: string
  SalesVideoCommissionDetailsChallenge:
    properties:
      id:
        type: string
      name:
        type: string
  SalesVideoCommissionDetails:
    properties:
      video:
        $ref: '#/definitions/SalesVideoCommissionDetailsVideo'
      challenge:
        $ref: '#/definitions/SalesVideoCommissionDetailsChallenge'
      totalCommission:
        type: number
      currency:
        type: string
      totalSales:
        type: integer
      totalBuyers:
        type: integer
      latestTransactions:
        type: array
        items:
          $ref: '#/definitions/SalesVideoCommissionTransaction'
  SalesVideoCommissionList:
    allOf:
      - $ref: '#/definitions/PaginatedList'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/SalesVideoCommissionDetails'
        required:
          - items
  SalesVideoCommissionTransaction:
    properties:
      date:
        type: string
      buyerId:
        type: string
      buyerUniqueId:
        type: string
      buyerAvatarImage:
        type: string
      commission:
        type: number
      currency:
        type: string
  SalesVideoCommissionTransactionList:
    allOf:
      - $ref: '#/definitions/PaginatedList'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/SalesVideoCommissionTransaction'
        required:
          - items
  SellerReview:
    type: object
    description: Order based review of seller.
    required:
      - id
      - orderId
      - sellerId
      - buyerId
      - rating
    properties:
      id:
        type: string
      orderId:
        type: string
      sellerId:
        type: string
      buyerId:
        type: string
      rating:
        type: integer
        description: 'Rating as int value from 1 to 5 (1 = bad, 5 = good).'
        minimum: 1
        maximum: 5
      privateReview:
        type: string
        description: Private review of seller. Only YEAY will see this.
      negativeRatingReason:
        $ref: '#/definitions/sellerReviewNegativeRatingReason'
  ShippingInfo:
    properties:
      weight:
        type: number
      length:
        type: number
      width:
        type: number
      height:
        type: number
  StripePaymentDetails:
    type: object
    properties:
      gatewayCustomerId:
        type: string
      gatewayEmail:
        type: string
      gatewayPayload:
        type: object
      gatewayCommerceType:
        type: string
  UniqueIdValidationResponse:
    required:
      - isValid
    properties:
      isValid:
        type: boolean
      suggestions:
        type: array
        items:
          type: string
      reason:
        title: UniqeIdValidationFailureReason
        description: >-
          Reason gives more information in case the requested unique id is not
          valid or not available.
        type: object
        required:
          - code
          - message
        properties:
          code:
            type: string
            enum:
              - BLACKLISTED
              - INVALID_CHARACTERS
              - ALREADY_IN_USE
          message:
            type: string
    example:
      isValid: false
      suggestions:
        - test-12345
        - test-12346
        - ...
      reason:
        code: INVALID_CHARACTERS
        message: The given uniqueId contains invalid character(s).
  UpdateChallengeRequest:
    properties:
      name:
        type: string
      description:
        type: string
      challengeCode:
        type: string
      isEnabled:
        type: boolean
      rank:
        type: integer
      brandName:
        type: string
      terms:
        type: string
        description: The participation terms of the challenge.
      orderNote:
        type: string
        description: The orderNote is included in challangen order confirmation emails.
      learnMore:
        type: string
        description: Additional text to learn more about the challenge.
      commissionAmount:
        type: integer
        description: Commission amount in cents
      commissionCurrency:
        type: string
        pattern: '[A-Z]'
        minLength: 3
        maxLength: 3
      associatedProducts:
        type: array
        items:
          type: string
      participationRequirements:
        type: array
        items:
          type: string
          enum:
            - ENTER_CODE
            - PURCHASE_CHALLENGE_PRODUCT
      featuredVideoIds:
        type: array
        items:
          type: string
        description: >-
          Ordered list of video IDs that will be shown in top of the list of
          challenge videos
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
  UpdateCollectionRequest:
    properties:
      name:
        type: string
      approved:
        type: boolean
      beginsAt:
        type: string
      endsAt:
        type: string
      isFeatured:
        type: boolean
      description:
        type: string
      videos:
        type: array
        items:
          type: string
      personalizationAttributes:
        description: Attributes that affect personalization behaviour of collections.
        type: object
        properties:
          gender:
            type: array
            items:
              type: string
              enum:
                - male
                - female
      ordering:
        type: number
  UpdateDeviceRequest:
    properties:
      deviceToken:
        type: string
      pushToken:
        type: string
      deviceOS:
        type: string
      deviceModel:
        type: string
      topics:
        type: array
        items:
          type: string
      deviceLocale:
        type: string
      advertisingId:
        type: string
  UpdateFeaturedTagRequest:
    properties:
      name:
        type: string
      isHero:
        type: boolean
      ordering:
        type: number
  UpdateProductRequest:
    properties:
      name:
        type: string
      description:
        type: string
      isOnline:
        description: Determines if a product and its videos are publically accessible.
        type: boolean
      price:
        type: number
        description: |
          **OBSOLETE** Products don't have customer provided price anymore.
      currency:
        type: string
        description: |
          **OBSOLETE** Products don't have customer provided currency anymore.
      yeayScorePrice:
        description: The product price in yeay score points. _(admin only)_
        type: integer
        format: int32
        minimum: 0
      size:
        type: string
      gender:
        type: string
      color:
        type: string
      material:
        type: string
      brand:
        type: string
      pattern:
        type: string
      adminTags:
        type: array
        items:
          type: string
        description: Can only be set by users with scope 'admin'.
      googleProductCategory:
        type: number
        description: Can only be set by users with scope 'admin'.
      yeay:
        type: boolean
        description: Can only be set by users with scope 'admin'.
      purchaseStatus:
        $ref: '#/definitions/productPurchaseStatus'
      affiliateLink:
        type: string
      affiliateName:
        type: string
  UpdateUserRequest:
    type: object
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      address:
        $ref: '#/definitions/Address'
      phoneNumber:
        type: string
      paypalEmail:
        type: string
      gender:
        type: string
      birthday:
        type: string
        format: date
      minAgeRange:
        type: number
      taxId:
        type: string
      locale:
        type: string
      currency:
        type: string
        pattern: '[A-Z]'
        minLength: 3
        maxLength: 3
      roles:
        type: array
        items:
          type: string
      appUserType:
        type: string
        enum:
          - regular
          - influencer
          - retailer
          - brand
      isVerifiedByYeay:
        type: boolean
      isScoreFrozen:
        type: boolean
        description: Only available in admin context
  UpdateVideoRequest:
    properties:
      productId:
        $ref: '#/definitions/IdOrNull'
      challengeId:
        $ref: '#/definitions/IdOrNull'
      videoTitle:
        type: string
        description: Title of video
      videoType:
        $ref: '#/definitions/videoType'
      website:
        type: string
      channels:
        type: array
        items:
          type: string
      adminTags:
        type: array
        items:
          type: string
        description: Can only be set by users with scope 'admin'.
      affiliateProductIds:
        description: Only available in admin context
        type: array
        items:
          type: string
      yeay:
        type: boolean
      submitted:
        type: boolean
      generalFeedVisibility:
        $ref: '#/definitions/videoGeneralFeedVisibility'
      specificFeedVisibilities:
        $ref: '#/definitions/videoSpecificFeedVisibilities'
      isOnline:
        description: Determines if a video is publically accessible.
        type: boolean
  User:
    properties:
      id:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
      emailVerified:
        type: boolean
      avatarImageUrl:
        type: string
      splashImageUrl:
        type: string
      deviceToken:
        type: string
      updatedAt:
        type: string
      createdAt:
        type: string
      address:
        $ref: '#/definitions/Address'
      paypalEmail:
        type: string
      phoneNumber:
        type: string
      gender:
        type: string
      birthday:
        type: string
        format: date
      taxId:
        type: string
      locale:
        type: string
      roles:
        type: array
        items:
          type: string
      altAvatarImages:
        type: object
      profileBio:
        type: string
      allowsChat:
        type: boolean
      currency:
        type: string
      paymentDetails:
        type: object
        properties:
          stripe:
            $ref: '#/definitions/StripePaymentDetails'
      appUserType:
        type: string
        enum:
          - regular
          - influencer
          - retailer
          - brand
      isVerifiedByYeay:
        type: boolean
      yeayScore:
        type: integer
        minimum: 0
        description: Only available if user is own user or when in admin context
      isScoreFrozen:
        type: boolean
        description: Only available if user is own user or when in admin context
  UserSettings:
    allOf:
      - $ref: '#/definitions/UserSettingsPublic'
      - $ref: '#/definitions/UserSettingsPrivate'
      - type: object
        properties:
          userId:
            type: string
  UserSettingsPrivate:
    properties:
      noteMadeASale:
        type: boolean
      noteSellerFollow:
        type: boolean
      noteFollowingMe:
        type: boolean
      noteItemShipped:
        type: boolean
      noteReviewLeft:
        type: boolean
      noteNewCommentOnMyVideo:
        type: boolean
      noteMentionedInVideoComment:
        type: boolean
      noteChallengeSale:
        type: boolean
      emailOptIn:
        type: boolean
      allowsChat:
        type: boolean
  UserSettingsPublic:
    properties:
      id:
        type: string
      totalLikes:
        type: number
      totalFollowing:
        type: number
      totalFollowers:
        type: number
      totalProducts:
        type: number
  Video:
    properties:
      id:
        type: string
      videoTitle:
        type: string
      caption:
        type: string
      approved:
        type: boolean
      submitted:
        type: boolean
      featured:
        type: boolean
      videoType:
        type: string
      converted:
        type: boolean
      expired:
        type: boolean
      airedAt:
        type: string
      ranking:
        type: number
      mediaUrl:
        type: string
      sourceMediaUrl:
        type: string
      altMediaUrl:
        type: string
        description: A new MPEG DASH url
      sharingImageUrl:
        type: string
        description: A url for shareable image generated on video upload
      posterImageUrl:
        type: string
        description: The image that is used as the poster image
      previewUrl:
        type: string
        description: A url for a gif formatted preview of the video
      altPreviewUrl:
        type: string
        description: A url for an mp4 formatted preview video. Not gif
      indexedAt:
        type: string
      updatedAt:
        type: string
      createdAt:
        type: string
      website:
        type: string
      socialVideoUrl:
        type: string
      channels:
        type: array
        items:
          type: string
      adminTags:
        type: array
        items:
          type: string
      yeay:
        type: boolean
      affiliateProductIds:
        type: array
        items:
          type: string
      totalLikes:
        type: number
      creator:
        $ref: '#/definitions/User'
      user:
        $ref: '#/definitions/User'
        description: >
          **DEPRECATED**. Please rely on `creator` in future to access the video
          creator
      challengeId:
        type: string
        description: 'The challenge id, if the video was uploaded for a challenge.'
      challenge:
        $ref: '#/definitions/ChallengeStub'
      generalFeedVisibility:
        $ref: '#/definitions/videoGeneralFeedVisibility'
      specificFeedVisibilities:
        $ref: '#/definitions/videoSpecificFeedVisibilities'
      isOnline:
        description: Determines if a video is publically accessible.
        type: boolean
      brands:
        description: List of brand tags that appear in the video
        type: string
  VideoApprovalRequest:
    properties:
      videoId:
        type: string
    required:
      - videoId
  VideoComment:
    type: object
    properties:
      id:
        type: string
      videoId:
        type: string
      author:
        type: object
        properties:
          id:
            type: string
          uniqueId:
            type: string
          avatarImageUrl:
            type: string
          altAvatarImages:
            $ref: '#/definitions/AltImageObject'
      status:
        type: string
      comment:
        type: string
      createdAt:
        type: string
        format: date
      updatedAt:
        type: string
        format: date
  VideoDisapprovalRequest:
    properties:
      videoId:
        type: string
      disapprovalReason:
        type: string
    required:
      - videoId
      - disapprovalReason
  VideoUnDisapprovalRequest:
    properties:
      videoId:
        type: string
    required:
      - videoId
  VideoViewStoppedRequest:
    properties:
      durationWatched:
        type: integer
        minimum: 0
        description: Duration the video was watched in seconds
      totalDuration:
        type: integer
        minimum: 0
        description: Total duration of video in seconds
    required:
      - durationWatched
      - totalDuration
  Wishlist:
    required:
      - videoIds
    properties:
      id:
        description: The unique identifier of the wishlist
        type: string
      videoIds:
        description: The list of video ids on the wishlist
        type: array
        items:
          type: string
      createdAt:
        description: Date of wishlist creation
        type: string
        format: date-time
      updatedAt:
        description: Date of last update on the wishlist
        type: string
        format: date-time
  YeayScoreTransactionList:
    allOf:
      - $ref: '#/definitions/PaginatedList'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/YeayScoreTransaction'
        required:
          - items
  productPurchaseStatus:
    description: Indicates how/if the product can be purchased.
    type: string
    enum:
      - coming-soon
      - pre-order
      - available
  sellerReviewNegativeRatingReason:
    type: string
    description: Reason for negative review (rating is 1 or 2).
    enum:
      - SELLER_IS_RUDE_OR_INSULTING
      - SELLER_DOESNT_REPLY_TO_MESSAGES
      - ITEM_NEVER_ARRIVED
      - ITEM_IS_BROKEN
      - ITEM_IN_POOR_CONDITION
      - WRONG_ITEM
      - OTHER
  videoGeneralFeedVisibility:
    type: boolean
    description: >
      Flag controlling feed visibility: `true` makes video visible in all feeds,
      `false` makes

      video invisible in all feeds. Invisible videos will be excluded from
      feeds. Default is `true`.

      Can be overwritten by `feedVisibility` on per feed basis.


      Only admin users are allowed to change this property.
  videoSpecificFeedVisibilities:
    type: object
    description: >
      Seetings object controlling feed visibility on per feed basis: `true` will
      make video visible

      in specified feed, `false` will make video invisble in specified feed.
      Unspecified feeds will

      (property not set) will be shown/hidden as specified by
      `defaultFeedVisibility`. Invisible

      videos will be excluded from feeds


      Only admin users are allowed to update this property.
    properties:
      new-videos:
        type: boolean
      trending-videos:
        type: boolean
      on-fire:
        type: boolean
      near-you:
        type: boolean
  videoType:
    type: string
    enum:
      - sale
    description: Type of video
  CatalogCollectionVideoList:
    allOf:
      - $ref: '#/definitions/PaginatedList'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/CatalogVideo'
        required:
          - items
  YeayScoreTransaction:
    required:
      - id
      - type
      - value
      - createdAt
    properties:
      id:
        description: The unique identifier of this transaction
        type: string
      type:
        description: The type/reason of this transaction
        type: string
      value:
        description: The transaction amout
        type: integer
      details:
        description: Additional data for this transaction
        type: object
      createdAt:
        description: Date of this transaction
        type: string
        format: date-time
  ChallengeStub:
    allOf:
      - $ref: '#/definitions/_GenericEntityStub'
  _GenericEntityStub:
    required:
      - id
    properties:
      id:
        type: string
